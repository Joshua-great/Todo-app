{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-30T09:05:24.292Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-30T09:19:42.833Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-30T09:20:36.474Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-30T09:20:52.549Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-30T09:21:01.993Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-30T09:21:24.469Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-30T09:21:30.455Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-30T09:21:34.791Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-30T09:21:41.849Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-30T09:21:44.311Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-30T09:21:55.695Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-30T09:45:47.708Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-30T09:52:49.749Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-30T09:54:49.129Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-30T17:28:35.710Z"}
{"level":"info","message":"[CreateUser] => Signup process started","timestamp":"2023-10-30T17:41:23.024Z"}
{"level":"info","message":"[CreateUser] => User with email olatokunjoshua@gmail.com created successfully","timestamp":"2023-10-30T17:41:23.180Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-30T17:42:02.295Z"}
{"level":"info","message":"[CreateUser] => Signup process started","timestamp":"2023-10-30T17:42:05.444Z"}
{"level":"info","message":"[Authenticate user] => login process started","timestamp":"2023-10-30T17:42:37.689Z"}
{"level":"info","message":"[CreateUser] => Signup process started","timestamp":"2023-10-30T17:44:36.055Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-30T17:56:27.044Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-30T17:56:32.239Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-30T18:04:58.484Z"}
{"level":"info","message":"[CreateUser] => Signup process started","timestamp":"2023-10-30T21:22:23.704Z"}
{"level":"info","message":"[CreateUser] => Signup process started","timestamp":"2023-10-30T21:23:26.715Z"}
{"level":"info","message":"[CreateUser] => Signup process started","timestamp":"2023-10-30T21:23:49.330Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-30T21:26:27.168Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-30T21:28:06.125Z"}
{"level":"info","message":"[CreateUser] => Signup process started","timestamp":"2023-10-30T21:30:11.323Z"}
{"level":"info","message":"[CreateUser] => Signup process started","timestamp":"2023-10-30T21:33:09.200Z"}
{"level":"info","message":"[CreateUser] => User with email graciousadamu@gmail.com created successfully","timestamp":"2023-10-30T21:33:09.321Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-30T21:33:41.924Z"}
{"level":"info","message":"[Authenticate user] => login process started","timestamp":"2023-10-30T21:34:22.402Z"}
{"level":"info","message":"[Authenticate user] => login process started","timestamp":"2023-10-30T21:34:35.304Z"}
{"level":"info","message":"[Authenticate user] => login process started","timestamp":"2023-10-30T21:39:24.081Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-30T21:39:58.261Z"}
{"level":"info","message":"[Authenticate user] => login process started","timestamp":"2023-10-30T21:40:05.787Z"}
{"level":"info","message":"[Authenticate user] => login process started","timestamp":"2023-10-30T21:40:13.133Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-30T21:40:29.240Z"}
{"level":"info","message":"[Authenticate user] => login process started","timestamp":"2023-10-30T21:40:46.550Z"}
{"level":"info","message":"[Authenticate user] => login process started","timestamp":"2023-10-30T21:43:58.063Z"}
{"level":"info","message":"[Authenticate user] => login process started","timestamp":"2023-10-30T21:44:13.943Z"}
{"level":"info","message":"[Authenticate user] => login process started","timestamp":"2023-10-30T21:44:37.646Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-30T21:48:39.979Z"}
{"level":"info","message":"[Authenticate user] => login process started","timestamp":"2023-10-30T21:48:46.802Z"}
{"level":"error","message":"Cannot set headers after they are sent to the client","timestamp":"2023-10-30T21:48:46.852Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-30T21:48:57.291Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-30T21:52:00.429Z"}
{"level":"info","message":"[Authenticate user] => login process started","timestamp":"2023-10-30T21:52:05.616Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-30T21:55:32.342Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-30T21:55:37.611Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-30T21:55:41.681Z"}
{"level":"info","message":"[Authenticate user] => login process started","timestamp":"2023-10-30T21:55:59.071Z"}
{"level":"info","message":"[Authenticate user] => login process started","timestamp":"2023-10-30T22:12:12.455Z"}
{"level":"info","message":"[Authenticate user] => login process started","timestamp":"2023-10-30T22:18:30.145Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-30T22:22:36.915Z"}
{"level":"info","message":"[Authenticate user] => login process started","timestamp":"2023-10-30T22:22:51.260Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-30T23:14:42.253Z"}
{"level":"info","message":"[Authenticate user] => login process started","timestamp":"2023-10-30T23:15:23.793Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'body')","timestamp":"2023-10-30T23:15:23.795Z"}
{"level":"info","message":"[Authenticate user] => login process started","timestamp":"2023-10-30T23:17:49.689Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'body')","timestamp":"2023-10-30T23:17:49.692Z"}
{"level":"info","message":"[Authenticate user] => login process started","timestamp":"2023-10-30T23:18:03.778Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'body')","timestamp":"2023-10-30T23:18:03.781Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T14:57:51.051Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T15:44:13.501Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T15:49:31.929Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T15:50:58.511Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T15:59:24.395Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T15:59:40.886Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T16:04:10.717Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T16:04:18.033Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T16:05:03.421Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T16:06:10.346Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T16:06:14.509Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T16:06:20.504Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T16:09:07.026Z"}
{"level":"error","message":"req is not defined","timestamp":"2023-10-31T16:15:27.033Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T16:15:53.600Z"}
{"level":"error","message":"req is not defined","timestamp":"2023-10-31T16:16:00.649Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T16:19:15.149Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T16:19:22.632Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T16:19:32.202Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T16:20:39.768Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T16:23:36.964Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T16:25:51.135Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T16:26:05.159Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T16:26:10.840Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T16:26:20.356Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T16:31:34.870Z"}
{"level":"error","message":"Cannot destructure property 'email' of 'req.body' as it is undefined.","timestamp":"2023-10-31T16:31:50.202Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T16:32:09.960Z"}
{"level":"error","message":"req is not defined","timestamp":"2023-10-31T16:32:15.938Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T16:32:36.626Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T16:41:25.088Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T16:44:32.197Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T16:49:03.200Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T17:03:32.664Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T17:07:51.431Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T17:08:02.898Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T17:08:06.829Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T17:08:10.299Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T17:08:14.412Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T17:08:50.225Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T17:09:02.989Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T17:09:07.565Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T17:09:12.375Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T17:09:22.963Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T17:09:36.485Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T17:13:45.735Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T17:14:11.474Z"}
{"level":"error","message":"token is not defined","timestamp":"2023-10-31T17:14:27.670Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T17:14:39.156Z"}
{"level":"error","message":"token is not defined","timestamp":"2023-10-31T17:14:43.803Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-10-31T17:14:54.348Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-07T15:09:08.039Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-07T15:09:14.022Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-07T15:09:17.305Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-07T15:10:58.263Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-07T15:12:24.812Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-07T15:13:28.458Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-07T15:13:37.716Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-07T15:14:02.138Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-07T15:14:11.437Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-07T15:17:02.635Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-07T15:17:18.935Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-07T15:17:29.630Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-07T15:18:36.506Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-07T15:21:00.583Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-07T15:21:54.747Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-07T15:22:22.373Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-07T15:22:28.498Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-07T15:32:28.899Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-07T15:32:33.899Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-07T15:32:41.069Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-07T15:43:48.823Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-07T15:46:00.835Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-07T15:47:13.688Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-09T15:59:12.098Z"}
{"level":"error","message":"Cast to string failed for value \"<ref *2> IncomingMessage {\n  _readableState: ReadableState {\n    objectMode: false,\n    highWaterMark: 16384,\n    buffer: BufferList { head: null, tail: null, length: 0 },\n    length: 0,\n    pipes: [],\n    flowing: true,\n    ended: true,\n    endEmitted: true,\n    reading: false,\n    constructed: true,\n    sync: false,\n    needReadable: false,\n    emittedReadable: false,\n    readableListening: false,\n    resumeScheduled: false,\n    errorEmitted: false,\n    emitClose: true,\n    autoDestroy: true,\n    destroyed: true,\n    errored: null,\n    closed: true,\n    closeEmitted: true,\n    defaultEncoding: 'utf8',\n    awaitDrainWriters: null,\n    multiAwaitDrain: false,\n    readingMore: false,\n    dataEmitted: true,\n    decoder: null,\n    encoding: null,\n    [Symbol(kPaused)]: false\n  },\n  _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },\n  _eventsCount: 1,\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: [],\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      constructed: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      destroyed: false,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      dataEmitted: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    _events: [Object: null prototype] {\n      end: [Array],\n      timeout: [Function: socketOnTimeout],\n      data: [Function: bound socketOnData],\n      error: [Function: socketOnError],\n      close: [Array],\n      drain: [Function: bound socketOnDrain],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      buffered: [],\n      bufferedIndex: 0,\n      allBuffers: true,\n      allNoop: true,\n      pendingcb: 0,\n      constructed: true,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      [Symbol(kOnFinished)]: []\n    },\n    allowHalfOpen: true,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    parser: HTTPParser {\n      '0': [Function: bound setRequestTimeout],\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *1],\n      incoming: [Circular *2],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      _closed: false,\n      socket: [Circular *1],\n      _header: null,\n      _keepAliveTimeout: 5000,\n      _onPendingData: [Function: bound updateOutgoingData],\n      req: [Circular *2],\n      _sent100: false,\n      _expect_continue: false,\n      locals: [Object: null prototype] {},\n      writeHead: [Function: writeHead],\n      end: [Function: end],\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype],\n      [Symbol(kUniqueHeaders)]: null\n    },\n    [Symbol(async_id_symbol)]: 256,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      [Symbol(owner_symbol)]: [Circular *1]\n    },\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: null,\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(kSetKeepAlive)]: false,\n    [Symbol(kSetKeepAliveInitialDelay)]: 0,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0,\n    [Symbol(RequestTimeout)]: undefined\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [\n    'Host',\n    'localhost:5000',\n    'Connection',\n    'keep-alive',\n    'Content-Length',\n    '47',\n    'Cache-Control',\n    'max-age=0',\n    'sec-ch-ua',\n    '\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"',\n    'sec-ch-ua-mobile',\n    '?0',\n    'sec-ch-ua-platform',\n    '\"Windows\"',\n    'Upgrade-Insecure-Requests',\n    '1',\n    'Origin',\n    'http://localhost:5000',\n    'Content-Type',\n    'application/x-www-form-urlencoded',\n    'User-Agent',\n    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36',\n    'Accept',\n    'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',\n    'Sec-Fetch-Site',\n    'same-origin',\n    'Sec-Fetch-Mode',\n    'navigate',\n    'Sec-Fetch-User',\n    '?1',\n    'Sec-Fetch-Dest',\n    'document',\n    'Referer',\n    'http://localhost:5000/',\n    'Accept-Encoding',\n    'gzip, deflate, br',\n    'Accept-Language',\n    'en-GB,en-US;q=0.9,en;q=0.8',\n    'Cookie',\n    'connect.sid=s%3A8WaCUmXiMZai4YWJETrqkTNJ76M-JgnN.f%2BJi91rHrITAdVKhA25dNeIup%2FevvodPqkG2zUO%2Buyw; ph_phc_cjuWI21zkiw3B30S2vdrLd2HtfmqRWuzZMldJrXEpPw_posthog=%7B%22distinct_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24device_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24user_state%22%3A%22anonymous%22%2C%22%24referrer%22%3A%22http%3A%2F%2Flocalhost%3A5000%2F%22%2C%22%24referring_domain%22%3A%22localhost%3A5000%22%2C%22%24sesid%22%3A%5B1699545675419%2C%2218bb4d0a7a8312-03b7b50ca08009-26031051-144000-18bb4d0a7a933a%22%2C1699545655208%5D%2C%22%24session_recording_enabled_server_side%22%3Afalse%2C%22%24active_feature_flags%22%3A%5B%5D%2C%22%24enabled_feature_flags%22%3A%7B%7D%2C%22%24feature_flag_payloads%22%3A%7B%7D%7D'\n  ],\n  rawTrailers: [],\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: [],\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      constructed: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      destroyed: false,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      dataEmitted: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    _events: [Object: null prototype] {\n      end: [Array],\n      timeout: [Function: socketOnTimeout],\n      data: [Function: bound socketOnData],\n      error: [Function: socketOnError],\n      close: [Array],\n      drain: [Function: bound socketOnDrain],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      buffered: [],\n      bufferedIndex: 0,\n      allBuffers: true,\n      allNoop: true,\n      pendingcb: 0,\n      constructed: true,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      [Symbol(kOnFinished)]: []\n    },\n    allowHalfOpen: true,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    parser: HTTPParser {\n      '0': [Function: bound setRequestTimeout],\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *1],\n      incoming: [Circular *2],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      _closed: false,\n      socket: [Circular *1],\n      _header: null,\n      _keepAliveTimeout: 5000,\n      _onPendingData: [Function: bound updateOutgoingData],\n      req: [Circular *2],\n      _sent100: false,\n      _expect_continue: false,\n      locals: [Object: null prototype] {},\n      writeHead: [Function: writeHead],\n      end: [Function: end],\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype],\n      [Symbol(kUniqueHeaders)]: null\n    },\n    [Symbol(async_id_symbol)]: 256,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      [Symbol(owner_symbol)]: [Circular *1]\n    },\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: null,\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(kSetKeepAlive)]: false,\n    [Symbol(kSetKeepAliveInitialDelay)]: 0,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0,\n    [Symbol(RequestTimeout)]: undefined\n  },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/login',\n  _parsedUrl: Url {\n    protocol: null,\n    slashes: null,\n    auth: null,\n    host: null,\n    port: null,\n    hostname: null,\n    hash: null,\n    search: null,\n    query: null,\n    pathname: '/login',\n    path: '/login',\n    href: '/login',\n    _raw: '/login'\n  },\n  params: {},\n  query: {},\n  res: <ref *3> ServerResponse {\n    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },\n    _eventsCount: 1,\n    _maxListeners: undefined,\n    outputData: [],\n    outputSize: 0,\n    writable: true,\n    destroyed: false,\n    _last: false,\n    chunkedEncoding: false,\n    shouldKeepAlive: true,\n    maxRequestsOnConnectionReached: false,\n    _defaultKeepAlive: true,\n    useChunkedEncodingByDefault: true,\n    sendDate: true,\n    _removedConnection: false,\n    _removedContLen: false,\n    _removedTE: false,\n    _contentLength: null,\n    _hasBody: true,\n    _trailer: '',\n    finished: false,\n    _headerSent: false,\n    _closed: false,\n    socket: <ref *1> Socket {\n      connecting: false,\n      _hadError: false,\n      _parent: null,\n      _host: null,\n      _readableState: [ReadableState],\n      _events: [Object: null prototype],\n      _eventsCount: 8,\n      _maxListeners: undefined,\n      _writableState: [WritableState],\n      allowHalfOpen: true,\n      _sockname: null,\n      _pendingData: null,\n      _pendingEncoding: '',\n      server: [Server],\n      _server: [Server],\n      parser: [HTTPParser],\n      on: [Function: socketListenerWrap],\n      addListener: [Function: socketListenerWrap],\n      prependListener: [Function: socketListenerWrap],\n      setEncoding: [Function: socketSetEncoding],\n      _paused: false,\n      _httpMessage: [Circular *3],\n      [Symbol(async_id_symbol)]: 256,\n      [Symbol(kHandle)]: [TCP],\n      [Symbol(lastWriteQueueSize)]: 0,\n      [Symbol(timeout)]: null,\n      [Symbol(kBuffer)]: null,\n      [Symbol(kBufferCb)]: null,\n      [Symbol(kBufferGen)]: null,\n      [Symbol(kCapture)]: false,\n      [Symbol(kSetNoDelay)]: false,\n      [Symbol(kSetKeepAlive)]: false,\n      [Symbol(kSetKeepAliveInitialDelay)]: 0,\n      [Symbol(kBytesRead)]: 0,\n      [Symbol(kBytesWritten)]: 0,\n      [Symbol(RequestTimeout)]: undefined\n    },\n    _header: null,\n    _keepAliveTimeout: 5000,\n    _onPendingData: [Function: bound updateOutgoingData],\n    req: [Circular *2],\n    _sent100: false,\n    _expect_continue: false,\n    locals: [Object: null prototype] {},\n    writeHead: [Function: writeHead],\n    end: [Function: end],\n    [Symbol(kCapture)]: false,\n    [Symbol(kNeedDrain)]: false,\n    [Symbol(corked)]: 0,\n    [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] },\n    [Symbol(kUniqueHeaders)]: null\n  },\n  body: { email: 'graciousadamu@gmail.com', password: 'Joshua' },\n  _body: true,\n  length: undefined,\n  _parsedOriginalUrl: Url {\n    protocol: null,\n    slashes: null,\n    auth: null,\n    host: null,\n    port: null,\n    hostname: null,\n    hash: null,\n    search: null,\n    query: null,\n    pathname: '/login',\n    path: '/login',\n    href: '/login',\n    _raw: '/login'\n  },\n  sessionStore: MemoryStore {\n    _events: [Object: null prototype] {\n      disconnect: [Function: ondisconnect],\n      connect: [Function: onconnect]\n    },\n    _eventsCount: 2,\n    _maxListeners: undefined,\n    sessions: [Object: null prototype] {\n      '8WaCUmXiMZai4YWJETrqkTNJ76M-JgnN': '{\"cookie\":{\"originalMaxAge\":null,\"expires\":null,\"httpOnly\":true,\"path\":\"/\"}}'\n    },\n    generate: [Function (anonymous)],\n    [Symbol(kCapture)]: false\n  },\n  sessionID: '8WaCUmXiMZai4YWJETrqkTNJ76M-JgnN',\n  session: Session {\n    cookie: { path: '/', _expires: null, originalMaxAge: null, httpOnly: true }\n  },\n  route: Route { path: '/login', stack: [ [Layer] ], methods: { post: true } },\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: {\n    host: 'localhost:5000',\n    connection: 'keep-alive',\n    'content-length': '47',\n    'cache-control': 'max-age=0',\n    'sec-ch-ua': '\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"',\n    'sec-ch-ua-mobile': '?0',\n    'sec-ch-ua-platform': '\"Windows\"',\n    'upgrade-insecure-requests': '1',\n    origin: 'http://localhost:5000',\n    'content-type': 'application/x-www-form-urlencoded',\n    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36',\n    accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',\n    'sec-fetch-site': 'same-origin',\n    'sec-fetch-mode': 'navigate',\n    'sec-fetch-user': '?1',\n    'sec-fetch-dest': 'document',\n    referer: 'http://localhost:5000/',\n    'accept-encoding': 'gzip, deflate, br',\n    'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8',\n    cookie: 'connect.sid=s%3A8WaCUmXiMZai4YWJETrqkTNJ76M-JgnN.f%2BJi91rHrITAdVKhA25dNeIup%2FevvodPqkG2zUO%2Buyw; ph_phc_cjuWI21zkiw3B30S2vdrLd2HtfmqRWuzZMldJrXEpPw_posthog=%7B%22distinct_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24device_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24user_state%22%3A%22anonymous%22%2C%22%24referrer%22%3A%22http%3A%2F%2Flocalhost%3A5000%2F%22%2C%22%24referring_domain%22%3A%22localhost%3A5000%22%2C%22%24sesid%22%3A%5B1699545675419%2C%2218bb4d0a7a8312-03b7b50ca08009-26031051-144000-18bb4d0a7a933a%22%2C1699545655208%5D%2C%22%24session_recording_enabled_server_side%22%3Afalse%2C%22%24active_feature_flags%22%3A%5B%5D%2C%22%24enabled_feature_flags%22%3A%7B%7D%2C%22%24feature_flag_payloads%22%3A%7B%7D%7D'\n  },\n  [Symbol(kHeadersCount)]: 40,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0,\n  [Symbol(RequestTimeout)]: undefined\n}\" (type IncomingMessage) at path \"email\" for model \"Users\"","timestamp":"2023-11-09T16:01:15.557Z"}
{"level":"error","message":"Cast to string failed for value \"<ref *2> IncomingMessage {\n  _readableState: ReadableState {\n    objectMode: false,\n    highWaterMark: 16384,\n    buffer: BufferList { head: null, tail: null, length: 0 },\n    length: 0,\n    pipes: [],\n    flowing: true,\n    ended: true,\n    endEmitted: true,\n    reading: false,\n    constructed: true,\n    sync: false,\n    needReadable: false,\n    emittedReadable: false,\n    readableListening: false,\n    resumeScheduled: false,\n    errorEmitted: false,\n    emitClose: true,\n    autoDestroy: true,\n    destroyed: true,\n    errored: null,\n    closed: true,\n    closeEmitted: true,\n    defaultEncoding: 'utf8',\n    awaitDrainWriters: null,\n    multiAwaitDrain: false,\n    readingMore: false,\n    dataEmitted: true,\n    decoder: null,\n    encoding: null,\n    [Symbol(kPaused)]: false\n  },\n  _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },\n  _eventsCount: 1,\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: [],\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      constructed: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      destroyed: false,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      dataEmitted: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    _events: [Object: null prototype] {\n      end: [Array],\n      timeout: [Function: socketOnTimeout],\n      data: [Function: bound socketOnData],\n      error: [Function: socketOnError],\n      close: [Array],\n      drain: [Function: bound socketOnDrain],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      buffered: [],\n      bufferedIndex: 0,\n      allBuffers: true,\n      allNoop: true,\n      pendingcb: 0,\n      constructed: true,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      [Symbol(kOnFinished)]: []\n    },\n    allowHalfOpen: true,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    parser: HTTPParser {\n      '0': [Function: bound setRequestTimeout],\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *1],\n      incoming: [Circular *2],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      _closed: false,\n      socket: [Circular *1],\n      _header: null,\n      _keepAliveTimeout: 5000,\n      _onPendingData: [Function: bound updateOutgoingData],\n      req: [Circular *2],\n      _sent100: false,\n      _expect_continue: false,\n      locals: [Object: null prototype] {},\n      writeHead: [Function: writeHead],\n      end: [Function: end],\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype],\n      [Symbol(kUniqueHeaders)]: null\n    },\n    [Symbol(async_id_symbol)]: 327,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      [Symbol(owner_symbol)]: [Circular *1]\n    },\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: null,\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(kSetKeepAlive)]: false,\n    [Symbol(kSetKeepAliveInitialDelay)]: 0,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0,\n    [Symbol(RequestTimeout)]: undefined\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [\n    'Host',\n    'localhost:5000',\n    'Connection',\n    'keep-alive',\n    'Content-Length',\n    '47',\n    'Cache-Control',\n    'max-age=0',\n    'sec-ch-ua',\n    '\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"',\n    'sec-ch-ua-mobile',\n    '?0',\n    'sec-ch-ua-platform',\n    '\"Windows\"',\n    'Upgrade-Insecure-Requests',\n    '1',\n    'Origin',\n    'http://localhost:5000',\n    'Content-Type',\n    'application/x-www-form-urlencoded',\n    'User-Agent',\n    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36',\n    'Accept',\n    'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',\n    'Sec-Fetch-Site',\n    'same-origin',\n    'Sec-Fetch-Mode',\n    'navigate',\n    'Sec-Fetch-User',\n    '?1',\n    'Sec-Fetch-Dest',\n    'document',\n    'Referer',\n    'http://localhost:5000/',\n    'Accept-Encoding',\n    'gzip, deflate, br',\n    'Accept-Language',\n    'en-GB,en-US;q=0.9,en;q=0.8',\n    'Cookie',\n    'connect.sid=s%3A8WaCUmXiMZai4YWJETrqkTNJ76M-JgnN.f%2BJi91rHrITAdVKhA25dNeIup%2FevvodPqkG2zUO%2Buyw; ph_phc_cjuWI21zkiw3B30S2vdrLd2HtfmqRWuzZMldJrXEpPw_posthog=%7B%22distinct_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24device_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24user_state%22%3A%22anonymous%22%2C%22%24referrer%22%3A%22http%3A%2F%2Flocalhost%3A5000%2F%22%2C%22%24referring_domain%22%3A%22localhost%3A5000%22%2C%22%24sesid%22%3A%5B1699545683151%2C%2218bb4d0a7a8312-03b7b50ca08009-26031051-144000-18bb4d0a7a933a%22%2C1699545655208%5D%2C%22%24session_recording_enabled_server_side%22%3Afalse%2C%22%24active_feature_flags%22%3A%5B%5D%2C%22%24enabled_feature_flags%22%3A%7B%7D%2C%22%24feature_flag_payloads%22%3A%7B%7D%7D'\n  ],\n  rawTrailers: [],\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: [],\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      constructed: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      destroyed: false,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      dataEmitted: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    _events: [Object: null prototype] {\n      end: [Array],\n      timeout: [Function: socketOnTimeout],\n      data: [Function: bound socketOnData],\n      error: [Function: socketOnError],\n      close: [Array],\n      drain: [Function: bound socketOnDrain],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      buffered: [],\n      bufferedIndex: 0,\n      allBuffers: true,\n      allNoop: true,\n      pendingcb: 0,\n      constructed: true,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      [Symbol(kOnFinished)]: []\n    },\n    allowHalfOpen: true,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    parser: HTTPParser {\n      '0': [Function: bound setRequestTimeout],\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *1],\n      incoming: [Circular *2],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      _closed: false,\n      socket: [Circular *1],\n      _header: null,\n      _keepAliveTimeout: 5000,\n      _onPendingData: [Function: bound updateOutgoingData],\n      req: [Circular *2],\n      _sent100: false,\n      _expect_continue: false,\n      locals: [Object: null prototype] {},\n      writeHead: [Function: writeHead],\n      end: [Function: end],\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype],\n      [Symbol(kUniqueHeaders)]: null\n    },\n    [Symbol(async_id_symbol)]: 327,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      [Symbol(owner_symbol)]: [Circular *1]\n    },\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: null,\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(kSetKeepAlive)]: false,\n    [Symbol(kSetKeepAliveInitialDelay)]: 0,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0,\n    [Symbol(RequestTimeout)]: undefined\n  },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/login',\n  _parsedUrl: Url {\n    protocol: null,\n    slashes: null,\n    auth: null,\n    host: null,\n    port: null,\n    hostname: null,\n    hash: null,\n    search: null,\n    query: null,\n    pathname: '/login',\n    path: '/login',\n    href: '/login',\n    _raw: '/login'\n  },\n  params: {},\n  query: {},\n  res: <ref *3> ServerResponse {\n    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },\n    _eventsCount: 1,\n    _maxListeners: undefined,\n    outputData: [],\n    outputSize: 0,\n    writable: true,\n    destroyed: false,\n    _last: false,\n    chunkedEncoding: false,\n    shouldKeepAlive: true,\n    maxRequestsOnConnectionReached: false,\n    _defaultKeepAlive: true,\n    useChunkedEncodingByDefault: true,\n    sendDate: true,\n    _removedConnection: false,\n    _removedContLen: false,\n    _removedTE: false,\n    _contentLength: null,\n    _hasBody: true,\n    _trailer: '',\n    finished: false,\n    _headerSent: false,\n    _closed: false,\n    socket: <ref *1> Socket {\n      connecting: false,\n      _hadError: false,\n      _parent: null,\n      _host: null,\n      _readableState: [ReadableState],\n      _events: [Object: null prototype],\n      _eventsCount: 8,\n      _maxListeners: undefined,\n      _writableState: [WritableState],\n      allowHalfOpen: true,\n      _sockname: null,\n      _pendingData: null,\n      _pendingEncoding: '',\n      server: [Server],\n      _server: [Server],\n      parser: [HTTPParser],\n      on: [Function: socketListenerWrap],\n      addListener: [Function: socketListenerWrap],\n      prependListener: [Function: socketListenerWrap],\n      setEncoding: [Function: socketSetEncoding],\n      _paused: false,\n      _httpMessage: [Circular *3],\n      [Symbol(async_id_symbol)]: 327,\n      [Symbol(kHandle)]: [TCP],\n      [Symbol(lastWriteQueueSize)]: 0,\n      [Symbol(timeout)]: null,\n      [Symbol(kBuffer)]: null,\n      [Symbol(kBufferCb)]: null,\n      [Symbol(kBufferGen)]: null,\n      [Symbol(kCapture)]: false,\n      [Symbol(kSetNoDelay)]: false,\n      [Symbol(kSetKeepAlive)]: false,\n      [Symbol(kSetKeepAliveInitialDelay)]: 0,\n      [Symbol(kBytesRead)]: 0,\n      [Symbol(kBytesWritten)]: 0,\n      [Symbol(RequestTimeout)]: undefined\n    },\n    _header: null,\n    _keepAliveTimeout: 5000,\n    _onPendingData: [Function: bound updateOutgoingData],\n    req: [Circular *2],\n    _sent100: false,\n    _expect_continue: false,\n    locals: [Object: null prototype] {},\n    writeHead: [Function: writeHead],\n    end: [Function: end],\n    [Symbol(kCapture)]: false,\n    [Symbol(kNeedDrain)]: false,\n    [Symbol(corked)]: 0,\n    [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] },\n    [Symbol(kUniqueHeaders)]: null\n  },\n  body: { email: 'graciousadamu@gmail.com', password: 'Joshua' },\n  _body: true,\n  length: undefined,\n  _parsedOriginalUrl: Url {\n    protocol: null,\n    slashes: null,\n    auth: null,\n    host: null,\n    port: null,\n    hostname: null,\n    hash: null,\n    search: null,\n    query: null,\n    pathname: '/login',\n    path: '/login',\n    href: '/login',\n    _raw: '/login'\n  },\n  sessionStore: MemoryStore {\n    _events: [Object: null prototype] {\n      disconnect: [Function: ondisconnect],\n      connect: [Function: onconnect]\n    },\n    _eventsCount: 2,\n    _maxListeners: undefined,\n    sessions: [Object: null prototype] {\n      '8WaCUmXiMZai4YWJETrqkTNJ76M-JgnN': '{\"cookie\":{\"originalMaxAge\":null,\"expires\":null,\"httpOnly\":true,\"path\":\"/\"}}'\n    },\n    generate: [Function (anonymous)],\n    [Symbol(kCapture)]: false\n  },\n  sessionID: '8WaCUmXiMZai4YWJETrqkTNJ76M-JgnN',\n  session: Session {\n    cookie: { path: '/', _expires: null, originalMaxAge: null, httpOnly: true }\n  },\n  route: Route { path: '/login', stack: [ [Layer] ], methods: { post: true } },\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: {\n    host: 'localhost:5000',\n    connection: 'keep-alive',\n    'content-length': '47',\n    'cache-control': 'max-age=0',\n    'sec-ch-ua': '\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"',\n    'sec-ch-ua-mobile': '?0',\n    'sec-ch-ua-platform': '\"Windows\"',\n    'upgrade-insecure-requests': '1',\n    origin: 'http://localhost:5000',\n    'content-type': 'application/x-www-form-urlencoded',\n    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36',\n    accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',\n    'sec-fetch-site': 'same-origin',\n    'sec-fetch-mode': 'navigate',\n    'sec-fetch-user': '?1',\n    'sec-fetch-dest': 'document',\n    referer: 'http://localhost:5000/',\n    'accept-encoding': 'gzip, deflate, br',\n    'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8',\n    cookie: 'connect.sid=s%3A8WaCUmXiMZai4YWJETrqkTNJ76M-JgnN.f%2BJi91rHrITAdVKhA25dNeIup%2FevvodPqkG2zUO%2Buyw; ph_phc_cjuWI21zkiw3B30S2vdrLd2HtfmqRWuzZMldJrXEpPw_posthog=%7B%22distinct_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24device_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24user_state%22%3A%22anonymous%22%2C%22%24referrer%22%3A%22http%3A%2F%2Flocalhost%3A5000%2F%22%2C%22%24referring_domain%22%3A%22localhost%3A5000%22%2C%22%24sesid%22%3A%5B1699545683151%2C%2218bb4d0a7a8312-03b7b50ca08009-26031051-144000-18bb4d0a7a933a%22%2C1699545655208%5D%2C%22%24session_recording_enabled_server_side%22%3Afalse%2C%22%24active_feature_flags%22%3A%5B%5D%2C%22%24enabled_feature_flags%22%3A%7B%7D%2C%22%24feature_flag_payloads%22%3A%7B%7D%7D'\n  },\n  [Symbol(kHeadersCount)]: 40,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0,\n  [Symbol(RequestTimeout)]: undefined\n}\" (type IncomingMessage) at path \"email\" for model \"Users\"","timestamp":"2023-11-09T16:01:23.264Z"}
{"level":"error","message":"Cast to string failed for value \"<ref *2> IncomingMessage {\n  _readableState: ReadableState {\n    objectMode: false,\n    highWaterMark: 16384,\n    buffer: BufferList { head: null, tail: null, length: 0 },\n    length: 0,\n    pipes: [],\n    flowing: true,\n    ended: true,\n    endEmitted: true,\n    reading: false,\n    constructed: true,\n    sync: false,\n    needReadable: false,\n    emittedReadable: false,\n    readableListening: false,\n    resumeScheduled: false,\n    errorEmitted: false,\n    emitClose: true,\n    autoDestroy: true,\n    destroyed: true,\n    errored: null,\n    closed: true,\n    closeEmitted: true,\n    defaultEncoding: 'utf8',\n    awaitDrainWriters: null,\n    multiAwaitDrain: false,\n    readingMore: false,\n    dataEmitted: true,\n    decoder: null,\n    encoding: null,\n    [Symbol(kPaused)]: false\n  },\n  _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },\n  _eventsCount: 1,\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: [],\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      constructed: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      destroyed: false,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      dataEmitted: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    _events: [Object: null prototype] {\n      end: [Array],\n      timeout: [Function: socketOnTimeout],\n      data: [Function: bound socketOnData],\n      error: [Function: socketOnError],\n      close: [Array],\n      drain: [Function: bound socketOnDrain],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      buffered: [],\n      bufferedIndex: 0,\n      allBuffers: true,\n      allNoop: true,\n      pendingcb: 0,\n      constructed: true,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      [Symbol(kOnFinished)]: []\n    },\n    allowHalfOpen: true,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    parser: HTTPParser {\n      '0': [Function: bound setRequestTimeout],\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *1],\n      incoming: [Circular *2],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      _closed: false,\n      socket: [Circular *1],\n      _header: null,\n      _keepAliveTimeout: 5000,\n      _onPendingData: [Function: bound updateOutgoingData],\n      req: [Circular *2],\n      _sent100: false,\n      _expect_continue: false,\n      locals: [Object: null prototype] {},\n      writeHead: [Function: writeHead],\n      end: [Function: end],\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype],\n      [Symbol(kUniqueHeaders)]: null\n    },\n    [Symbol(async_id_symbol)]: 437,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      [Symbol(owner_symbol)]: [Circular *1]\n    },\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: null,\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(kSetKeepAlive)]: false,\n    [Symbol(kSetKeepAliveInitialDelay)]: 0,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0,\n    [Symbol(RequestTimeout)]: undefined\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [\n    'Host',\n    'localhost:5000',\n    'Connection',\n    'keep-alive',\n    'Content-Length',\n    '47',\n    'Cache-Control',\n    'max-age=0',\n    'sec-ch-ua',\n    '\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"',\n    'sec-ch-ua-mobile',\n    '?0',\n    'sec-ch-ua-platform',\n    '\"Windows\"',\n    'Upgrade-Insecure-Requests',\n    '1',\n    'Origin',\n    'http://localhost:5000',\n    'Content-Type',\n    'application/x-www-form-urlencoded',\n    'User-Agent',\n    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36',\n    'Accept',\n    'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',\n    'Sec-Fetch-Site',\n    'same-origin',\n    'Sec-Fetch-Mode',\n    'navigate',\n    'Sec-Fetch-User',\n    '?1',\n    'Sec-Fetch-Dest',\n    'document',\n    'Referer',\n    'http://localhost:5000/',\n    'Accept-Encoding',\n    'gzip, deflate, br',\n    'Accept-Language',\n    'en-GB,en-US;q=0.9,en;q=0.8',\n    'Cookie',\n    'connect.sid=s%3A8WaCUmXiMZai4YWJETrqkTNJ76M-JgnN.f%2BJi91rHrITAdVKhA25dNeIup%2FevvodPqkG2zUO%2Buyw; ph_phc_cjuWI21zkiw3B30S2vdrLd2HtfmqRWuzZMldJrXEpPw_posthog=%7B%22distinct_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24device_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24user_state%22%3A%22anonymous%22%2C%22%24referrer%22%3A%22http%3A%2F%2Flocalhost%3A5000%2F%22%2C%22%24referring_domain%22%3A%22localhost%3A5000%22%2C%22%24sesid%22%3A%5B1699545745060%2C%2218bb4d0a7a8312-03b7b50ca08009-26031051-144000-18bb4d0a7a933a%22%2C1699545655208%5D%2C%22%24session_recording_enabled_server_side%22%3Afalse%2C%22%24active_feature_flags%22%3A%5B%5D%2C%22%24enabled_feature_flags%22%3A%7B%7D%2C%22%24feature_flag_payloads%22%3A%7B%7D%7D'\n  ],\n  rawTrailers: [],\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: [],\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      constructed: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      destroyed: false,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      dataEmitted: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    _events: [Object: null prototype] {\n      end: [Array],\n      timeout: [Function: socketOnTimeout],\n      data: [Function: bound socketOnData],\n      error: [Function: socketOnError],\n      close: [Array],\n      drain: [Function: bound socketOnDrain],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      buffered: [],\n      bufferedIndex: 0,\n      allBuffers: true,\n      allNoop: true,\n      pendingcb: 0,\n      constructed: true,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      [Symbol(kOnFinished)]: []\n    },\n    allowHalfOpen: true,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 1,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    parser: HTTPParser {\n      '0': [Function: bound setRequestTimeout],\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *1],\n      incoming: [Circular *2],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      _closed: false,\n      socket: [Circular *1],\n      _header: null,\n      _keepAliveTimeout: 5000,\n      _onPendingData: [Function: bound updateOutgoingData],\n      req: [Circular *2],\n      _sent100: false,\n      _expect_continue: false,\n      locals: [Object: null prototype] {},\n      writeHead: [Function: writeHead],\n      end: [Function: end],\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype],\n      [Symbol(kUniqueHeaders)]: null\n    },\n    [Symbol(async_id_symbol)]: 437,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      [Symbol(owner_symbol)]: [Circular *1]\n    },\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: null,\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(kSetKeepAlive)]: false,\n    [Symbol(kSetKeepAliveInitialDelay)]: 0,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0,\n    [Symbol(RequestTimeout)]: undefined\n  },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/login',\n  _parsedUrl: Url {\n    protocol: null,\n    slashes: null,\n    auth: null,\n    host: null,\n    port: null,\n    hostname: null,\n    hash: null,\n    search: null,\n    query: null,\n    pathname: '/login',\n    path: '/login',\n    href: '/login',\n    _raw: '/login'\n  },\n  params: {},\n  query: {},\n  res: <ref *3> ServerResponse {\n    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },\n    _eventsCount: 1,\n    _maxListeners: undefined,\n    outputData: [],\n    outputSize: 0,\n    writable: true,\n    destroyed: false,\n    _last: false,\n    chunkedEncoding: false,\n    shouldKeepAlive: true,\n    maxRequestsOnConnectionReached: false,\n    _defaultKeepAlive: true,\n    useChunkedEncodingByDefault: true,\n    sendDate: true,\n    _removedConnection: false,\n    _removedContLen: false,\n    _removedTE: false,\n    _contentLength: null,\n    _hasBody: true,\n    _trailer: '',\n    finished: false,\n    _headerSent: false,\n    _closed: false,\n    socket: <ref *1> Socket {\n      connecting: false,\n      _hadError: false,\n      _parent: null,\n      _host: null,\n      _readableState: [ReadableState],\n      _events: [Object: null prototype],\n      _eventsCount: 8,\n      _maxListeners: undefined,\n      _writableState: [WritableState],\n      allowHalfOpen: true,\n      _sockname: null,\n      _pendingData: null,\n      _pendingEncoding: '',\n      server: [Server],\n      _server: [Server],\n      parser: [HTTPParser],\n      on: [Function: socketListenerWrap],\n      addListener: [Function: socketListenerWrap],\n      prependListener: [Function: socketListenerWrap],\n      setEncoding: [Function: socketSetEncoding],\n      _paused: false,\n      _httpMessage: [Circular *3],\n      [Symbol(async_id_symbol)]: 437,\n      [Symbol(kHandle)]: [TCP],\n      [Symbol(lastWriteQueueSize)]: 0,\n      [Symbol(timeout)]: null,\n      [Symbol(kBuffer)]: null,\n      [Symbol(kBufferCb)]: null,\n      [Symbol(kBufferGen)]: null,\n      [Symbol(kCapture)]: false,\n      [Symbol(kSetNoDelay)]: false,\n      [Symbol(kSetKeepAlive)]: false,\n      [Symbol(kSetKeepAliveInitialDelay)]: 0,\n      [Symbol(kBytesRead)]: 0,\n      [Symbol(kBytesWritten)]: 0,\n      [Symbol(RequestTimeout)]: undefined\n    },\n    _header: null,\n    _keepAliveTimeout: 5000,\n    _onPendingData: [Function: bound updateOutgoingData],\n    req: [Circular *2],\n    _sent100: false,\n    _expect_continue: false,\n    locals: [Object: null prototype] {},\n    writeHead: [Function: writeHead],\n    end: [Function: end],\n    [Symbol(kCapture)]: false,\n    [Symbol(kNeedDrain)]: false,\n    [Symbol(corked)]: 0,\n    [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] },\n    [Symbol(kUniqueHeaders)]: null\n  },\n  body: { email: 'graciousadamu@gmail.com', password: 'Joshua' },\n  _body: true,\n  length: undefined,\n  _parsedOriginalUrl: Url {\n    protocol: null,\n    slashes: null,\n    auth: null,\n    host: null,\n    port: null,\n    hostname: null,\n    hash: null,\n    search: null,\n    query: null,\n    pathname: '/login',\n    path: '/login',\n    href: '/login',\n    _raw: '/login'\n  },\n  sessionStore: MemoryStore {\n    _events: [Object: null prototype] {\n      disconnect: [Function: ondisconnect],\n      connect: [Function: onconnect]\n    },\n    _eventsCount: 2,\n    _maxListeners: undefined,\n    sessions: [Object: null prototype] {\n      '8WaCUmXiMZai4YWJETrqkTNJ76M-JgnN': '{\"cookie\":{\"originalMaxAge\":null,\"expires\":null,\"httpOnly\":true,\"path\":\"/\"}}'\n    },\n    generate: [Function (anonymous)],\n    [Symbol(kCapture)]: false\n  },\n  sessionID: '8WaCUmXiMZai4YWJETrqkTNJ76M-JgnN',\n  session: Session {\n    cookie: { path: '/', _expires: null, originalMaxAge: null, httpOnly: true }\n  },\n  route: Route { path: '/login', stack: [ [Layer] ], methods: { post: true } },\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: {\n    host: 'localhost:5000',\n    connection: 'keep-alive',\n    'content-length': '47',\n    'cache-control': 'max-age=0',\n    'sec-ch-ua': '\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"',\n    'sec-ch-ua-mobile': '?0',\n    'sec-ch-ua-platform': '\"Windows\"',\n    'upgrade-insecure-requests': '1',\n    origin: 'http://localhost:5000',\n    'content-type': 'application/x-www-form-urlencoded',\n    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36',\n    accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',\n    'sec-fetch-site': 'same-origin',\n    'sec-fetch-mode': 'navigate',\n    'sec-fetch-user': '?1',\n    'sec-fetch-dest': 'document',\n    referer: 'http://localhost:5000/',\n    'accept-encoding': 'gzip, deflate, br',\n    'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8',\n    cookie: 'connect.sid=s%3A8WaCUmXiMZai4YWJETrqkTNJ76M-JgnN.f%2BJi91rHrITAdVKhA25dNeIup%2FevvodPqkG2zUO%2Buyw; ph_phc_cjuWI21zkiw3B30S2vdrLd2HtfmqRWuzZMldJrXEpPw_posthog=%7B%22distinct_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24device_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24user_state%22%3A%22anonymous%22%2C%22%24referrer%22%3A%22http%3A%2F%2Flocalhost%3A5000%2F%22%2C%22%24referring_domain%22%3A%22localhost%3A5000%22%2C%22%24sesid%22%3A%5B1699545745060%2C%2218bb4d0a7a8312-03b7b50ca08009-26031051-144000-18bb4d0a7a933a%22%2C1699545655208%5D%2C%22%24session_recording_enabled_server_side%22%3Afalse%2C%22%24active_feature_flags%22%3A%5B%5D%2C%22%24enabled_feature_flags%22%3A%7B%7D%2C%22%24feature_flag_payloads%22%3A%7B%7D%7D'\n  },\n  [Symbol(kHeadersCount)]: 40,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0,\n  [Symbol(RequestTimeout)]: undefined\n}\" (type IncomingMessage) at path \"email\" for model \"Users\"","timestamp":"2023-11-09T16:02:25.155Z"}
{"level":"error","message":"Cast to string failed for value \"<ref *2> IncomingMessage {\n  _readableState: ReadableState {\n    objectMode: false,\n    highWaterMark: 16384,\n    buffer: BufferList { head: null, tail: null, length: 0 },\n    length: 0,\n    pipes: [],\n    flowing: true,\n    ended: true,\n    endEmitted: true,\n    reading: false,\n    constructed: true,\n    sync: false,\n    needReadable: false,\n    emittedReadable: false,\n    readableListening: false,\n    resumeScheduled: false,\n    errorEmitted: false,\n    emitClose: true,\n    autoDestroy: true,\n    destroyed: true,\n    errored: null,\n    closed: true,\n    closeEmitted: true,\n    defaultEncoding: 'utf8',\n    awaitDrainWriters: null,\n    multiAwaitDrain: false,\n    readingMore: false,\n    dataEmitted: true,\n    decoder: null,\n    encoding: null,\n    [Symbol(kPaused)]: false\n  },\n  _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },\n  _eventsCount: 1,\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: [],\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      constructed: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      destroyed: false,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      dataEmitted: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    _events: [Object: null prototype] {\n      end: [Array],\n      timeout: [Function: socketOnTimeout],\n      data: [Function: bound socketOnData],\n      error: [Function: socketOnError],\n      close: [Array],\n      drain: [Function: bound socketOnDrain],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      buffered: [],\n      bufferedIndex: 0,\n      allBuffers: true,\n      allNoop: true,\n      pendingcb: 0,\n      constructed: true,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      [Symbol(kOnFinished)]: []\n    },\n    allowHalfOpen: true,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    parser: HTTPParser {\n      '0': [Function: bound setRequestTimeout],\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *1],\n      incoming: [Circular *2],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      _closed: false,\n      socket: [Circular *1],\n      _header: null,\n      _keepAliveTimeout: 5000,\n      _onPendingData: [Function: bound updateOutgoingData],\n      req: [Circular *2],\n      _sent100: false,\n      _expect_continue: false,\n      locals: [Object: null prototype] {},\n      writeHead: [Function: writeHead],\n      end: [Function: end],\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype],\n      [Symbol(kUniqueHeaders)]: null\n    },\n    [Symbol(async_id_symbol)]: 456,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      [Symbol(owner_symbol)]: [Circular *1]\n    },\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: null,\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(kSetKeepAlive)]: false,\n    [Symbol(kSetKeepAliveInitialDelay)]: 0,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0,\n    [Symbol(RequestTimeout)]: undefined\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [\n    'Host',\n    'localhost:5000',\n    'Connection',\n    'keep-alive',\n    'Content-Length',\n    '47',\n    'Cache-Control',\n    'max-age=0',\n    'sec-ch-ua',\n    '\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"',\n    'sec-ch-ua-mobile',\n    '?0',\n    'sec-ch-ua-platform',\n    '\"Windows\"',\n    'Upgrade-Insecure-Requests',\n    '1',\n    'Origin',\n    'http://localhost:5000',\n    'Content-Type',\n    'application/x-www-form-urlencoded',\n    'User-Agent',\n    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36',\n    'Accept',\n    'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',\n    'Sec-Fetch-Site',\n    'same-origin',\n    'Sec-Fetch-Mode',\n    'navigate',\n    'Sec-Fetch-User',\n    '?1',\n    'Sec-Fetch-Dest',\n    'document',\n    'Referer',\n    'http://localhost:5000/',\n    'Accept-Encoding',\n    'gzip, deflate, br',\n    'Accept-Language',\n    'en-GB,en-US;q=0.9,en;q=0.8',\n    'Cookie',\n    'connect.sid=s%3A8WaCUmXiMZai4YWJETrqkTNJ76M-JgnN.f%2BJi91rHrITAdVKhA25dNeIup%2FevvodPqkG2zUO%2Buyw; ph_phc_cjuWI21zkiw3B30S2vdrLd2HtfmqRWuzZMldJrXEpPw_posthog=%7B%22distinct_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24device_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24user_state%22%3A%22anonymous%22%2C%22%24referrer%22%3A%22http%3A%2F%2Flocalhost%3A5000%2F%22%2C%22%24referring_domain%22%3A%22localhost%3A5000%22%2C%22%24sesid%22%3A%5B1699545747308%2C%2218bb4d0a7a8312-03b7b50ca08009-26031051-144000-18bb4d0a7a933a%22%2C1699545655208%5D%2C%22%24session_recording_enabled_server_side%22%3Afalse%2C%22%24active_feature_flags%22%3A%5B%5D%2C%22%24enabled_feature_flags%22%3A%7B%7D%2C%22%24feature_flag_payloads%22%3A%7B%7D%7D'\n  ],\n  rawTrailers: [],\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: [],\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      constructed: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      destroyed: false,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      dataEmitted: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    _events: [Object: null prototype] {\n      end: [Array],\n      timeout: [Function: socketOnTimeout],\n      data: [Function: bound socketOnData],\n      error: [Function: socketOnError],\n      close: [Array],\n      drain: [Function: bound socketOnDrain],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      buffered: [],\n      bufferedIndex: 0,\n      allBuffers: true,\n      allNoop: true,\n      pendingcb: 0,\n      constructed: true,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      [Symbol(kOnFinished)]: []\n    },\n    allowHalfOpen: true,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    parser: HTTPParser {\n      '0': [Function: bound setRequestTimeout],\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *1],\n      incoming: [Circular *2],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      _closed: false,\n      socket: [Circular *1],\n      _header: null,\n      _keepAliveTimeout: 5000,\n      _onPendingData: [Function: bound updateOutgoingData],\n      req: [Circular *2],\n      _sent100: false,\n      _expect_continue: false,\n      locals: [Object: null prototype] {},\n      writeHead: [Function: writeHead],\n      end: [Function: end],\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype],\n      [Symbol(kUniqueHeaders)]: null\n    },\n    [Symbol(async_id_symbol)]: 456,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      [Symbol(owner_symbol)]: [Circular *1]\n    },\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: null,\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(kSetKeepAlive)]: false,\n    [Symbol(kSetKeepAliveInitialDelay)]: 0,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0,\n    [Symbol(RequestTimeout)]: undefined\n  },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/login',\n  _parsedUrl: Url {\n    protocol: null,\n    slashes: null,\n    auth: null,\n    host: null,\n    port: null,\n    hostname: null,\n    hash: null,\n    search: null,\n    query: null,\n    pathname: '/login',\n    path: '/login',\n    href: '/login',\n    _raw: '/login'\n  },\n  params: {},\n  query: {},\n  res: <ref *3> ServerResponse {\n    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },\n    _eventsCount: 1,\n    _maxListeners: undefined,\n    outputData: [],\n    outputSize: 0,\n    writable: true,\n    destroyed: false,\n    _last: false,\n    chunkedEncoding: false,\n    shouldKeepAlive: true,\n    maxRequestsOnConnectionReached: false,\n    _defaultKeepAlive: true,\n    useChunkedEncodingByDefault: true,\n    sendDate: true,\n    _removedConnection: false,\n    _removedContLen: false,\n    _removedTE: false,\n    _contentLength: null,\n    _hasBody: true,\n    _trailer: '',\n    finished: false,\n    _headerSent: false,\n    _closed: false,\n    socket: <ref *1> Socket {\n      connecting: false,\n      _hadError: false,\n      _parent: null,\n      _host: null,\n      _readableState: [ReadableState],\n      _events: [Object: null prototype],\n      _eventsCount: 8,\n      _maxListeners: undefined,\n      _writableState: [WritableState],\n      allowHalfOpen: true,\n      _sockname: null,\n      _pendingData: null,\n      _pendingEncoding: '',\n      server: [Server],\n      _server: [Server],\n      parser: [HTTPParser],\n      on: [Function: socketListenerWrap],\n      addListener: [Function: socketListenerWrap],\n      prependListener: [Function: socketListenerWrap],\n      setEncoding: [Function: socketSetEncoding],\n      _paused: false,\n      _httpMessage: [Circular *3],\n      [Symbol(async_id_symbol)]: 456,\n      [Symbol(kHandle)]: [TCP],\n      [Symbol(lastWriteQueueSize)]: 0,\n      [Symbol(timeout)]: null,\n      [Symbol(kBuffer)]: null,\n      [Symbol(kBufferCb)]: null,\n      [Symbol(kBufferGen)]: null,\n      [Symbol(kCapture)]: false,\n      [Symbol(kSetNoDelay)]: false,\n      [Symbol(kSetKeepAlive)]: false,\n      [Symbol(kSetKeepAliveInitialDelay)]: 0,\n      [Symbol(kBytesRead)]: 0,\n      [Symbol(kBytesWritten)]: 0,\n      [Symbol(RequestTimeout)]: undefined\n    },\n    _header: null,\n    _keepAliveTimeout: 5000,\n    _onPendingData: [Function: bound updateOutgoingData],\n    req: [Circular *2],\n    _sent100: false,\n    _expect_continue: false,\n    locals: [Object: null prototype] {},\n    writeHead: [Function: writeHead],\n    end: [Function: end],\n    [Symbol(kCapture)]: false,\n    [Symbol(kNeedDrain)]: false,\n    [Symbol(corked)]: 0,\n    [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] },\n    [Symbol(kUniqueHeaders)]: null\n  },\n  body: { email: 'graciousadamu@gmail.com', password: 'Joshua' },\n  _body: true,\n  length: undefined,\n  _parsedOriginalUrl: Url {\n    protocol: null,\n    slashes: null,\n    auth: null,\n    host: null,\n    port: null,\n    hostname: null,\n    hash: null,\n    search: null,\n    query: null,\n    pathname: '/login',\n    path: '/login',\n    href: '/login',\n    _raw: '/login'\n  },\n  sessionStore: MemoryStore {\n    _events: [Object: null prototype] {\n      disconnect: [Function: ondisconnect],\n      connect: [Function: onconnect]\n    },\n    _eventsCount: 2,\n    _maxListeners: undefined,\n    sessions: [Object: null prototype] {\n      '8WaCUmXiMZai4YWJETrqkTNJ76M-JgnN': '{\"cookie\":{\"originalMaxAge\":null,\"expires\":null,\"httpOnly\":true,\"path\":\"/\"}}'\n    },\n    generate: [Function (anonymous)],\n    [Symbol(kCapture)]: false\n  },\n  sessionID: '8WaCUmXiMZai4YWJETrqkTNJ76M-JgnN',\n  session: Session {\n    cookie: { path: '/', _expires: null, originalMaxAge: null, httpOnly: true }\n  },\n  route: Route { path: '/login', stack: [ [Layer] ], methods: { post: true } },\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: {\n    host: 'localhost:5000',\n    connection: 'keep-alive',\n    'content-length': '47',\n    'cache-control': 'max-age=0',\n    'sec-ch-ua': '\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"',\n    'sec-ch-ua-mobile': '?0',\n    'sec-ch-ua-platform': '\"Windows\"',\n    'upgrade-insecure-requests': '1',\n    origin: 'http://localhost:5000',\n    'content-type': 'application/x-www-form-urlencoded',\n    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36',\n    accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',\n    'sec-fetch-site': 'same-origin',\n    'sec-fetch-mode': 'navigate',\n    'sec-fetch-user': '?1',\n    'sec-fetch-dest': 'document',\n    referer: 'http://localhost:5000/',\n    'accept-encoding': 'gzip, deflate, br',\n    'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8',\n    cookie: 'connect.sid=s%3A8WaCUmXiMZai4YWJETrqkTNJ76M-JgnN.f%2BJi91rHrITAdVKhA25dNeIup%2FevvodPqkG2zUO%2Buyw; ph_phc_cjuWI21zkiw3B30S2vdrLd2HtfmqRWuzZMldJrXEpPw_posthog=%7B%22distinct_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24device_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24user_state%22%3A%22anonymous%22%2C%22%24referrer%22%3A%22http%3A%2F%2Flocalhost%3A5000%2F%22%2C%22%24referring_domain%22%3A%22localhost%3A5000%22%2C%22%24sesid%22%3A%5B1699545747308%2C%2218bb4d0a7a8312-03b7b50ca08009-26031051-144000-18bb4d0a7a933a%22%2C1699545655208%5D%2C%22%24session_recording_enabled_server_side%22%3Afalse%2C%22%24active_feature_flags%22%3A%5B%5D%2C%22%24enabled_feature_flags%22%3A%7B%7D%2C%22%24feature_flag_payloads%22%3A%7B%7D%7D'\n  },\n  [Symbol(kHeadersCount)]: 40,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0,\n  [Symbol(RequestTimeout)]: undefined\n}\" (type IncomingMessage) at path \"email\" for model \"Users\"","timestamp":"2023-11-09T16:02:27.372Z"}
{"level":"error","message":"Cast to string failed for value \"<ref *2> IncomingMessage {\n  _readableState: ReadableState {\n    objectMode: false,\n    highWaterMark: 16384,\n    buffer: BufferList { head: null, tail: null, length: 0 },\n    length: 0,\n    pipes: [],\n    flowing: true,\n    ended: true,\n    endEmitted: true,\n    reading: false,\n    constructed: true,\n    sync: false,\n    needReadable: false,\n    emittedReadable: false,\n    readableListening: false,\n    resumeScheduled: false,\n    errorEmitted: false,\n    emitClose: true,\n    autoDestroy: true,\n    destroyed: true,\n    errored: null,\n    closed: true,\n    closeEmitted: true,\n    defaultEncoding: 'utf8',\n    awaitDrainWriters: null,\n    multiAwaitDrain: false,\n    readingMore: false,\n    dataEmitted: true,\n    decoder: null,\n    encoding: null,\n    [Symbol(kPaused)]: false\n  },\n  _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },\n  _eventsCount: 1,\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: [],\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      constructed: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      destroyed: false,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      dataEmitted: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    _events: [Object: null prototype] {\n      end: [Array],\n      timeout: [Function: socketOnTimeout],\n      data: [Function: bound socketOnData],\n      error: [Function: socketOnError],\n      close: [Array],\n      drain: [Function: bound socketOnDrain],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      buffered: [],\n      bufferedIndex: 0,\n      allBuffers: true,\n      allNoop: true,\n      pendingcb: 0,\n      constructed: true,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      [Symbol(kOnFinished)]: []\n    },\n    allowHalfOpen: true,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    parser: HTTPParser {\n      '0': [Function: bound setRequestTimeout],\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *1],\n      incoming: [Circular *2],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      _closed: false,\n      socket: [Circular *1],\n      _header: null,\n      _keepAliveTimeout: 5000,\n      _onPendingData: [Function: bound updateOutgoingData],\n      req: [Circular *2],\n      _sent100: false,\n      _expect_continue: false,\n      locals: [Object: null prototype] {},\n      writeHead: [Function: writeHead],\n      end: [Function: end],\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype],\n      [Symbol(kUniqueHeaders)]: null\n    },\n    [Symbol(async_id_symbol)]: 505,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      [Symbol(owner_symbol)]: [Circular *1]\n    },\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: null,\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(kSetKeepAlive)]: false,\n    [Symbol(kSetKeepAliveInitialDelay)]: 0,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0,\n    [Symbol(RequestTimeout)]: undefined\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [\n    'Host',\n    'localhost:5000',\n    'Connection',\n    'keep-alive',\n    'Content-Length',\n    '47',\n    'Cache-Control',\n    'max-age=0',\n    'sec-ch-ua',\n    '\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"',\n    'sec-ch-ua-mobile',\n    '?0',\n    'sec-ch-ua-platform',\n    '\"Windows\"',\n    'Upgrade-Insecure-Requests',\n    '1',\n    'Origin',\n    'http://localhost:5000',\n    'Content-Type',\n    'application/x-www-form-urlencoded',\n    'User-Agent',\n    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36',\n    'Accept',\n    'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',\n    'Sec-Fetch-Site',\n    'same-origin',\n    'Sec-Fetch-Mode',\n    'navigate',\n    'Sec-Fetch-User',\n    '?1',\n    'Sec-Fetch-Dest',\n    'document',\n    'Referer',\n    'http://localhost:5000/',\n    'Accept-Encoding',\n    'gzip, deflate, br',\n    'Accept-Language',\n    'en-GB,en-US;q=0.9,en;q=0.8',\n    'Cookie',\n    'connect.sid=s%3A8WaCUmXiMZai4YWJETrqkTNJ76M-JgnN.f%2BJi91rHrITAdVKhA25dNeIup%2FevvodPqkG2zUO%2Buyw; ph_phc_cjuWI21zkiw3B30S2vdrLd2HtfmqRWuzZMldJrXEpPw_posthog=%7B%22distinct_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24device_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24user_state%22%3A%22anonymous%22%2C%22%24referrer%22%3A%22http%3A%2F%2Flocalhost%3A5000%2F%22%2C%22%24referring_domain%22%3A%22localhost%3A5000%22%2C%22%24sesid%22%3A%5B1699545754032%2C%2218bb4d0a7a8312-03b7b50ca08009-26031051-144000-18bb4d0a7a933a%22%2C1699545655208%5D%2C%22%24session_recording_enabled_server_side%22%3Afalse%2C%22%24active_feature_flags%22%3A%5B%5D%2C%22%24enabled_feature_flags%22%3A%7B%7D%2C%22%24feature_flag_payloads%22%3A%7B%7D%7D'\n  ],\n  rawTrailers: [],\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: [],\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      constructed: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      destroyed: false,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      dataEmitted: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    _events: [Object: null prototype] {\n      end: [Array],\n      timeout: [Function: socketOnTimeout],\n      data: [Function: bound socketOnData],\n      error: [Function: socketOnError],\n      close: [Array],\n      drain: [Function: bound socketOnDrain],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      buffered: [],\n      bufferedIndex: 0,\n      allBuffers: true,\n      allNoop: true,\n      pendingcb: 0,\n      constructed: true,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      [Symbol(kOnFinished)]: []\n    },\n    allowHalfOpen: true,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    parser: HTTPParser {\n      '0': [Function: bound setRequestTimeout],\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *1],\n      incoming: [Circular *2],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      _closed: false,\n      socket: [Circular *1],\n      _header: null,\n      _keepAliveTimeout: 5000,\n      _onPendingData: [Function: bound updateOutgoingData],\n      req: [Circular *2],\n      _sent100: false,\n      _expect_continue: false,\n      locals: [Object: null prototype] {},\n      writeHead: [Function: writeHead],\n      end: [Function: end],\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype],\n      [Symbol(kUniqueHeaders)]: null\n    },\n    [Symbol(async_id_symbol)]: 505,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      [Symbol(owner_symbol)]: [Circular *1]\n    },\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: null,\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(kSetKeepAlive)]: false,\n    [Symbol(kSetKeepAliveInitialDelay)]: 0,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0,\n    [Symbol(RequestTimeout)]: undefined\n  },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/login',\n  _parsedUrl: Url {\n    protocol: null,\n    slashes: null,\n    auth: null,\n    host: null,\n    port: null,\n    hostname: null,\n    hash: null,\n    search: null,\n    query: null,\n    pathname: '/login',\n    path: '/login',\n    href: '/login',\n    _raw: '/login'\n  },\n  params: {},\n  query: {},\n  res: <ref *3> ServerResponse {\n    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },\n    _eventsCount: 1,\n    _maxListeners: undefined,\n    outputData: [],\n    outputSize: 0,\n    writable: true,\n    destroyed: false,\n    _last: false,\n    chunkedEncoding: false,\n    shouldKeepAlive: true,\n    maxRequestsOnConnectionReached: false,\n    _defaultKeepAlive: true,\n    useChunkedEncodingByDefault: true,\n    sendDate: true,\n    _removedConnection: false,\n    _removedContLen: false,\n    _removedTE: false,\n    _contentLength: null,\n    _hasBody: true,\n    _trailer: '',\n    finished: false,\n    _headerSent: false,\n    _closed: false,\n    socket: <ref *1> Socket {\n      connecting: false,\n      _hadError: false,\n      _parent: null,\n      _host: null,\n      _readableState: [ReadableState],\n      _events: [Object: null prototype],\n      _eventsCount: 8,\n      _maxListeners: undefined,\n      _writableState: [WritableState],\n      allowHalfOpen: true,\n      _sockname: null,\n      _pendingData: null,\n      _pendingEncoding: '',\n      server: [Server],\n      _server: [Server],\n      parser: [HTTPParser],\n      on: [Function: socketListenerWrap],\n      addListener: [Function: socketListenerWrap],\n      prependListener: [Function: socketListenerWrap],\n      setEncoding: [Function: socketSetEncoding],\n      _paused: false,\n      _httpMessage: [Circular *3],\n      [Symbol(async_id_symbol)]: 505,\n      [Symbol(kHandle)]: [TCP],\n      [Symbol(lastWriteQueueSize)]: 0,\n      [Symbol(timeout)]: null,\n      [Symbol(kBuffer)]: null,\n      [Symbol(kBufferCb)]: null,\n      [Symbol(kBufferGen)]: null,\n      [Symbol(kCapture)]: false,\n      [Symbol(kSetNoDelay)]: false,\n      [Symbol(kSetKeepAlive)]: false,\n      [Symbol(kSetKeepAliveInitialDelay)]: 0,\n      [Symbol(kBytesRead)]: 0,\n      [Symbol(kBytesWritten)]: 0,\n      [Symbol(RequestTimeout)]: undefined\n    },\n    _header: null,\n    _keepAliveTimeout: 5000,\n    _onPendingData: [Function: bound updateOutgoingData],\n    req: [Circular *2],\n    _sent100: false,\n    _expect_continue: false,\n    locals: [Object: null prototype] {},\n    writeHead: [Function: writeHead],\n    end: [Function: end],\n    [Symbol(kCapture)]: false,\n    [Symbol(kNeedDrain)]: false,\n    [Symbol(corked)]: 0,\n    [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] },\n    [Symbol(kUniqueHeaders)]: null\n  },\n  body: { email: 'graciousadamu@gmail.com', password: 'Joshua' },\n  _body: true,\n  length: undefined,\n  _parsedOriginalUrl: Url {\n    protocol: null,\n    slashes: null,\n    auth: null,\n    host: null,\n    port: null,\n    hostname: null,\n    hash: null,\n    search: null,\n    query: null,\n    pathname: '/login',\n    path: '/login',\n    href: '/login',\n    _raw: '/login'\n  },\n  sessionStore: MemoryStore {\n    _events: [Object: null prototype] {\n      disconnect: [Function: ondisconnect],\n      connect: [Function: onconnect]\n    },\n    _eventsCount: 2,\n    _maxListeners: undefined,\n    sessions: [Object: null prototype] {\n      '8WaCUmXiMZai4YWJETrqkTNJ76M-JgnN': '{\"cookie\":{\"originalMaxAge\":null,\"expires\":null,\"httpOnly\":true,\"path\":\"/\"}}'\n    },\n    generate: [Function (anonymous)],\n    [Symbol(kCapture)]: false\n  },\n  sessionID: '8WaCUmXiMZai4YWJETrqkTNJ76M-JgnN',\n  session: Session {\n    cookie: { path: '/', _expires: null, originalMaxAge: null, httpOnly: true }\n  },\n  route: Route { path: '/login', stack: [ [Layer] ], methods: { post: true } },\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: {\n    host: 'localhost:5000',\n    connection: 'keep-alive',\n    'content-length': '47',\n    'cache-control': 'max-age=0',\n    'sec-ch-ua': '\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"',\n    'sec-ch-ua-mobile': '?0',\n    'sec-ch-ua-platform': '\"Windows\"',\n    'upgrade-insecure-requests': '1',\n    origin: 'http://localhost:5000',\n    'content-type': 'application/x-www-form-urlencoded',\n    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36',\n    accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',\n    'sec-fetch-site': 'same-origin',\n    'sec-fetch-mode': 'navigate',\n    'sec-fetch-user': '?1',\n    'sec-fetch-dest': 'document',\n    referer: 'http://localhost:5000/',\n    'accept-encoding': 'gzip, deflate, br',\n    'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8',\n    cookie: 'connect.sid=s%3A8WaCUmXiMZai4YWJETrqkTNJ76M-JgnN.f%2BJi91rHrITAdVKhA25dNeIup%2FevvodPqkG2zUO%2Buyw; ph_phc_cjuWI21zkiw3B30S2vdrLd2HtfmqRWuzZMldJrXEpPw_posthog=%7B%22distinct_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24device_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24user_state%22%3A%22anonymous%22%2C%22%24referrer%22%3A%22http%3A%2F%2Flocalhost%3A5000%2F%22%2C%22%24referring_domain%22%3A%22localhost%3A5000%22%2C%22%24sesid%22%3A%5B1699545754032%2C%2218bb4d0a7a8312-03b7b50ca08009-26031051-144000-18bb4d0a7a933a%22%2C1699545655208%5D%2C%22%24session_recording_enabled_server_side%22%3Afalse%2C%22%24active_feature_flags%22%3A%5B%5D%2C%22%24enabled_feature_flags%22%3A%7B%7D%2C%22%24feature_flag_payloads%22%3A%7B%7D%7D'\n  },\n  [Symbol(kHeadersCount)]: 40,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0,\n  [Symbol(RequestTimeout)]: undefined\n}\" (type IncomingMessage) at path \"email\" for model \"Users\"","timestamp":"2023-11-09T16:02:34.132Z"}
{"level":"error","message":"Cast to string failed for value \"<ref *2> IncomingMessage {\n  _readableState: ReadableState {\n    objectMode: false,\n    highWaterMark: 16384,\n    buffer: BufferList { head: null, tail: null, length: 0 },\n    length: 0,\n    pipes: [],\n    flowing: true,\n    ended: true,\n    endEmitted: true,\n    reading: false,\n    constructed: true,\n    sync: false,\n    needReadable: false,\n    emittedReadable: false,\n    readableListening: false,\n    resumeScheduled: false,\n    errorEmitted: false,\n    emitClose: true,\n    autoDestroy: true,\n    destroyed: true,\n    errored: null,\n    closed: true,\n    closeEmitted: true,\n    defaultEncoding: 'utf8',\n    awaitDrainWriters: null,\n    multiAwaitDrain: false,\n    readingMore: false,\n    dataEmitted: true,\n    decoder: null,\n    encoding: null,\n    [Symbol(kPaused)]: false\n  },\n  _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },\n  _eventsCount: 1,\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: [],\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      constructed: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      destroyed: false,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      dataEmitted: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    _events: [Object: null prototype] {\n      end: [Array],\n      timeout: [Function: socketOnTimeout],\n      data: [Function: bound socketOnData],\n      error: [Function: socketOnError],\n      close: [Array],\n      drain: [Function: bound socketOnDrain],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      buffered: [],\n      bufferedIndex: 0,\n      allBuffers: true,\n      allNoop: true,\n      pendingcb: 0,\n      constructed: true,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      [Symbol(kOnFinished)]: []\n    },\n    allowHalfOpen: true,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    parser: HTTPParser {\n      '0': [Function: bound setRequestTimeout],\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *1],\n      incoming: [Circular *2],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      _closed: false,\n      socket: [Circular *1],\n      _header: null,\n      _keepAliveTimeout: 5000,\n      _onPendingData: [Function: bound updateOutgoingData],\n      req: [Circular *2],\n      _sent100: false,\n      _expect_continue: false,\n      locals: [Object: null prototype] {},\n      writeHead: [Function: writeHead],\n      end: [Function: end],\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype],\n      [Symbol(kUniqueHeaders)]: null\n    },\n    [Symbol(async_id_symbol)]: 502,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      [Symbol(owner_symbol)]: [Circular *1]\n    },\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: null,\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(kSetKeepAlive)]: false,\n    [Symbol(kSetKeepAliveInitialDelay)]: 0,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0,\n    [Symbol(RequestTimeout)]: undefined\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [\n    'Host',\n    'localhost:5000',\n    'Connection',\n    'keep-alive',\n    'Content-Length',\n    '47',\n    'Cache-Control',\n    'max-age=0',\n    'sec-ch-ua',\n    '\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"',\n    'sec-ch-ua-mobile',\n    '?0',\n    'sec-ch-ua-platform',\n    '\"Windows\"',\n    'Upgrade-Insecure-Requests',\n    '1',\n    'Origin',\n    'http://localhost:5000',\n    'Content-Type',\n    'application/x-www-form-urlencoded',\n    'User-Agent',\n    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36',\n    'Accept',\n    'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',\n    'Sec-Fetch-Site',\n    'same-origin',\n    'Sec-Fetch-Mode',\n    'navigate',\n    'Sec-Fetch-User',\n    '?1',\n    'Sec-Fetch-Dest',\n    'document',\n    'Referer',\n    'http://localhost:5000/',\n    'Accept-Encoding',\n    'gzip, deflate, br',\n    'Accept-Language',\n    'en-GB,en-US;q=0.9,en;q=0.8',\n    'Cookie',\n    'connect.sid=s%3A8WaCUmXiMZai4YWJETrqkTNJ76M-JgnN.f%2BJi91rHrITAdVKhA25dNeIup%2FevvodPqkG2zUO%2Buyw; ph_phc_cjuWI21zkiw3B30S2vdrLd2HtfmqRWuzZMldJrXEpPw_posthog=%7B%22distinct_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24device_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24user_state%22%3A%22anonymous%22%2C%22%24referrer%22%3A%22http%3A%2F%2Flocalhost%3A5000%2F%22%2C%22%24referring_domain%22%3A%22localhost%3A5000%22%2C%22%24sesid%22%3A%5B1699545756040%2C%2218bb4d0a7a8312-03b7b50ca08009-26031051-144000-18bb4d0a7a933a%22%2C1699545655208%5D%2C%22%24session_recording_enabled_server_side%22%3Afalse%2C%22%24active_feature_flags%22%3A%5B%5D%2C%22%24enabled_feature_flags%22%3A%7B%7D%2C%22%24feature_flag_payloads%22%3A%7B%7D%7D'\n  ],\n  rawTrailers: [],\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: [],\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      constructed: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      destroyed: false,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      dataEmitted: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    _events: [Object: null prototype] {\n      end: [Array],\n      timeout: [Function: socketOnTimeout],\n      data: [Function: bound socketOnData],\n      error: [Function: socketOnError],\n      close: [Array],\n      drain: [Function: bound socketOnDrain],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      buffered: [],\n      bufferedIndex: 0,\n      allBuffers: true,\n      allNoop: true,\n      pendingcb: 0,\n      constructed: true,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      [Symbol(kOnFinished)]: []\n    },\n    allowHalfOpen: true,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    parser: HTTPParser {\n      '0': [Function: bound setRequestTimeout],\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *1],\n      incoming: [Circular *2],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      _closed: false,\n      socket: [Circular *1],\n      _header: null,\n      _keepAliveTimeout: 5000,\n      _onPendingData: [Function: bound updateOutgoingData],\n      req: [Circular *2],\n      _sent100: false,\n      _expect_continue: false,\n      locals: [Object: null prototype] {},\n      writeHead: [Function: writeHead],\n      end: [Function: end],\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype],\n      [Symbol(kUniqueHeaders)]: null\n    },\n    [Symbol(async_id_symbol)]: 502,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      [Symbol(owner_symbol)]: [Circular *1]\n    },\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: null,\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(kSetKeepAlive)]: false,\n    [Symbol(kSetKeepAliveInitialDelay)]: 0,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0,\n    [Symbol(RequestTimeout)]: undefined\n  },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/login',\n  _parsedUrl: Url {\n    protocol: null,\n    slashes: null,\n    auth: null,\n    host: null,\n    port: null,\n    hostname: null,\n    hash: null,\n    search: null,\n    query: null,\n    pathname: '/login',\n    path: '/login',\n    href: '/login',\n    _raw: '/login'\n  },\n  params: {},\n  query: {},\n  res: <ref *3> ServerResponse {\n    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },\n    _eventsCount: 1,\n    _maxListeners: undefined,\n    outputData: [],\n    outputSize: 0,\n    writable: true,\n    destroyed: false,\n    _last: false,\n    chunkedEncoding: false,\n    shouldKeepAlive: true,\n    maxRequestsOnConnectionReached: false,\n    _defaultKeepAlive: true,\n    useChunkedEncodingByDefault: true,\n    sendDate: true,\n    _removedConnection: false,\n    _removedContLen: false,\n    _removedTE: false,\n    _contentLength: null,\n    _hasBody: true,\n    _trailer: '',\n    finished: false,\n    _headerSent: false,\n    _closed: false,\n    socket: <ref *1> Socket {\n      connecting: false,\n      _hadError: false,\n      _parent: null,\n      _host: null,\n      _readableState: [ReadableState],\n      _events: [Object: null prototype],\n      _eventsCount: 8,\n      _maxListeners: undefined,\n      _writableState: [WritableState],\n      allowHalfOpen: true,\n      _sockname: null,\n      _pendingData: null,\n      _pendingEncoding: '',\n      server: [Server],\n      _server: [Server],\n      parser: [HTTPParser],\n      on: [Function: socketListenerWrap],\n      addListener: [Function: socketListenerWrap],\n      prependListener: [Function: socketListenerWrap],\n      setEncoding: [Function: socketSetEncoding],\n      _paused: false,\n      _httpMessage: [Circular *3],\n      [Symbol(async_id_symbol)]: 502,\n      [Symbol(kHandle)]: [TCP],\n      [Symbol(lastWriteQueueSize)]: 0,\n      [Symbol(timeout)]: null,\n      [Symbol(kBuffer)]: null,\n      [Symbol(kBufferCb)]: null,\n      [Symbol(kBufferGen)]: null,\n      [Symbol(kCapture)]: false,\n      [Symbol(kSetNoDelay)]: false,\n      [Symbol(kSetKeepAlive)]: false,\n      [Symbol(kSetKeepAliveInitialDelay)]: 0,\n      [Symbol(kBytesRead)]: 0,\n      [Symbol(kBytesWritten)]: 0,\n      [Symbol(RequestTimeout)]: undefined\n    },\n    _header: null,\n    _keepAliveTimeout: 5000,\n    _onPendingData: [Function: bound updateOutgoingData],\n    req: [Circular *2],\n    _sent100: false,\n    _expect_continue: false,\n    locals: [Object: null prototype] {},\n    writeHead: [Function: writeHead],\n    end: [Function: end],\n    [Symbol(kCapture)]: false,\n    [Symbol(kNeedDrain)]: false,\n    [Symbol(corked)]: 0,\n    [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] },\n    [Symbol(kUniqueHeaders)]: null\n  },\n  body: { email: 'graciousadamu@gmail.com', password: 'Joshua' },\n  _body: true,\n  length: undefined,\n  _parsedOriginalUrl: Url {\n    protocol: null,\n    slashes: null,\n    auth: null,\n    host: null,\n    port: null,\n    hostname: null,\n    hash: null,\n    search: null,\n    query: null,\n    pathname: '/login',\n    path: '/login',\n    href: '/login',\n    _raw: '/login'\n  },\n  sessionStore: MemoryStore {\n    _events: [Object: null prototype] {\n      disconnect: [Function: ondisconnect],\n      connect: [Function: onconnect]\n    },\n    _eventsCount: 2,\n    _maxListeners: undefined,\n    sessions: [Object: null prototype] {\n      '8WaCUmXiMZai4YWJETrqkTNJ76M-JgnN': '{\"cookie\":{\"originalMaxAge\":null,\"expires\":null,\"httpOnly\":true,\"path\":\"/\"}}'\n    },\n    generate: [Function (anonymous)],\n    [Symbol(kCapture)]: false\n  },\n  sessionID: '8WaCUmXiMZai4YWJETrqkTNJ76M-JgnN',\n  session: Session {\n    cookie: { path: '/', _expires: null, originalMaxAge: null, httpOnly: true }\n  },\n  route: Route { path: '/login', stack: [ [Layer] ], methods: { post: true } },\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: {\n    host: 'localhost:5000',\n    connection: 'keep-alive',\n    'content-length': '47',\n    'cache-control': 'max-age=0',\n    'sec-ch-ua': '\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"',\n    'sec-ch-ua-mobile': '?0',\n    'sec-ch-ua-platform': '\"Windows\"',\n    'upgrade-insecure-requests': '1',\n    origin: 'http://localhost:5000',\n    'content-type': 'application/x-www-form-urlencoded',\n    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36',\n    accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',\n    'sec-fetch-site': 'same-origin',\n    'sec-fetch-mode': 'navigate',\n    'sec-fetch-user': '?1',\n    'sec-fetch-dest': 'document',\n    referer: 'http://localhost:5000/',\n    'accept-encoding': 'gzip, deflate, br',\n    'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8',\n    cookie: 'connect.sid=s%3A8WaCUmXiMZai4YWJETrqkTNJ76M-JgnN.f%2BJi91rHrITAdVKhA25dNeIup%2FevvodPqkG2zUO%2Buyw; ph_phc_cjuWI21zkiw3B30S2vdrLd2HtfmqRWuzZMldJrXEpPw_posthog=%7B%22distinct_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24device_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24user_state%22%3A%22anonymous%22%2C%22%24referrer%22%3A%22http%3A%2F%2Flocalhost%3A5000%2F%22%2C%22%24referring_domain%22%3A%22localhost%3A5000%22%2C%22%24sesid%22%3A%5B1699545756040%2C%2218bb4d0a7a8312-03b7b50ca08009-26031051-144000-18bb4d0a7a933a%22%2C1699545655208%5D%2C%22%24session_recording_enabled_server_side%22%3Afalse%2C%22%24active_feature_flags%22%3A%5B%5D%2C%22%24enabled_feature_flags%22%3A%7B%7D%2C%22%24feature_flag_payloads%22%3A%7B%7D%7D'\n  },\n  [Symbol(kHeadersCount)]: 40,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0,\n  [Symbol(RequestTimeout)]: undefined\n}\" (type IncomingMessage) at path \"email\" for model \"Users\"","timestamp":"2023-11-09T16:02:36.132Z"}
{"level":"error","message":"Cast to string failed for value \"<ref *2> IncomingMessage {\n  _readableState: ReadableState {\n    objectMode: false,\n    highWaterMark: 16384,\n    buffer: BufferList { head: null, tail: null, length: 0 },\n    length: 0,\n    pipes: [],\n    flowing: true,\n    ended: true,\n    endEmitted: true,\n    reading: false,\n    constructed: true,\n    sync: false,\n    needReadable: false,\n    emittedReadable: false,\n    readableListening: false,\n    resumeScheduled: false,\n    errorEmitted: false,\n    emitClose: true,\n    autoDestroy: true,\n    destroyed: true,\n    errored: null,\n    closed: true,\n    closeEmitted: true,\n    defaultEncoding: 'utf8',\n    awaitDrainWriters: null,\n    multiAwaitDrain: false,\n    readingMore: false,\n    dataEmitted: true,\n    decoder: null,\n    encoding: null,\n    [Symbol(kPaused)]: false\n  },\n  _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },\n  _eventsCount: 1,\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: [],\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      constructed: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      destroyed: false,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      dataEmitted: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    _events: [Object: null prototype] {\n      end: [Array],\n      timeout: [Function: socketOnTimeout],\n      data: [Function: bound socketOnData],\n      error: [Function: socketOnError],\n      close: [Array],\n      drain: [Function: bound socketOnDrain],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      buffered: [],\n      bufferedIndex: 0,\n      allBuffers: true,\n      allNoop: true,\n      pendingcb: 0,\n      constructed: true,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      [Symbol(kOnFinished)]: []\n    },\n    allowHalfOpen: true,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    parser: HTTPParser {\n      '0': [Function: bound setRequestTimeout],\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *1],\n      incoming: [Circular *2],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      _closed: false,\n      socket: [Circular *1],\n      _header: null,\n      _keepAliveTimeout: 5000,\n      _onPendingData: [Function: bound updateOutgoingData],\n      req: [Circular *2],\n      _sent100: false,\n      _expect_continue: false,\n      locals: [Object: null prototype] {},\n      writeHead: [Function: writeHead],\n      end: [Function: end],\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype],\n      [Symbol(kUniqueHeaders)]: null\n    },\n    [Symbol(async_id_symbol)]: 529,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      [Symbol(owner_symbol)]: [Circular *1]\n    },\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: null,\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(kSetKeepAlive)]: false,\n    [Symbol(kSetKeepAliveInitialDelay)]: 0,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0,\n    [Symbol(RequestTimeout)]: undefined\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [\n    'Host',\n    'localhost:5000',\n    'Connection',\n    'keep-alive',\n    'Content-Length',\n    '47',\n    'Cache-Control',\n    'max-age=0',\n    'sec-ch-ua',\n    '\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"',\n    'sec-ch-ua-mobile',\n    '?0',\n    'sec-ch-ua-platform',\n    '\"Windows\"',\n    'Upgrade-Insecure-Requests',\n    '1',\n    'Origin',\n    'http://localhost:5000',\n    'Content-Type',\n    'application/x-www-form-urlencoded',\n    'User-Agent',\n    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36',\n    'Accept',\n    'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',\n    'Sec-Fetch-Site',\n    'same-origin',\n    'Sec-Fetch-Mode',\n    'navigate',\n    'Sec-Fetch-User',\n    '?1',\n    'Sec-Fetch-Dest',\n    'document',\n    'Referer',\n    'http://localhost:5000/',\n    'Accept-Encoding',\n    'gzip, deflate, br',\n    'Accept-Language',\n    'en-GB,en-US;q=0.9,en;q=0.8',\n    'Cookie',\n    'connect.sid=s%3A8WaCUmXiMZai4YWJETrqkTNJ76M-JgnN.f%2BJi91rHrITAdVKhA25dNeIup%2FevvodPqkG2zUO%2Buyw; ph_phc_cjuWI21zkiw3B30S2vdrLd2HtfmqRWuzZMldJrXEpPw_posthog=%7B%22distinct_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24device_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24user_state%22%3A%22anonymous%22%2C%22%24referrer%22%3A%22http%3A%2F%2Flocalhost%3A5000%2F%22%2C%22%24referring_domain%22%3A%22localhost%3A5000%22%2C%22%24sesid%22%3A%5B1699545758275%2C%2218bb4d0a7a8312-03b7b50ca08009-26031051-144000-18bb4d0a7a933a%22%2C1699545655208%5D%2C%22%24session_recording_enabled_server_side%22%3Afalse%2C%22%24active_feature_flags%22%3A%5B%5D%2C%22%24enabled_feature_flags%22%3A%7B%7D%2C%22%24feature_flag_payloads%22%3A%7B%7D%7D'\n  ],\n  rawTrailers: [],\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: [],\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      constructed: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      destroyed: false,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      dataEmitted: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    _events: [Object: null prototype] {\n      end: [Array],\n      timeout: [Function: socketOnTimeout],\n      data: [Function: bound socketOnData],\n      error: [Function: socketOnError],\n      close: [Array],\n      drain: [Function: bound socketOnDrain],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      buffered: [],\n      bufferedIndex: 0,\n      allBuffers: true,\n      allNoop: true,\n      pendingcb: 0,\n      constructed: true,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      [Symbol(kOnFinished)]: []\n    },\n    allowHalfOpen: true,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    parser: HTTPParser {\n      '0': [Function: bound setRequestTimeout],\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *1],\n      incoming: [Circular *2],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      _closed: false,\n      socket: [Circular *1],\n      _header: null,\n      _keepAliveTimeout: 5000,\n      _onPendingData: [Function: bound updateOutgoingData],\n      req: [Circular *2],\n      _sent100: false,\n      _expect_continue: false,\n      locals: [Object: null prototype] {},\n      writeHead: [Function: writeHead],\n      end: [Function: end],\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype],\n      [Symbol(kUniqueHeaders)]: null\n    },\n    [Symbol(async_id_symbol)]: 529,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      [Symbol(owner_symbol)]: [Circular *1]\n    },\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: null,\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(kSetKeepAlive)]: false,\n    [Symbol(kSetKeepAliveInitialDelay)]: 0,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0,\n    [Symbol(RequestTimeout)]: undefined\n  },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/login',\n  _parsedUrl: Url {\n    protocol: null,\n    slashes: null,\n    auth: null,\n    host: null,\n    port: null,\n    hostname: null,\n    hash: null,\n    search: null,\n    query: null,\n    pathname: '/login',\n    path: '/login',\n    href: '/login',\n    _raw: '/login'\n  },\n  params: {},\n  query: {},\n  res: <ref *3> ServerResponse {\n    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },\n    _eventsCount: 1,\n    _maxListeners: undefined,\n    outputData: [],\n    outputSize: 0,\n    writable: true,\n    destroyed: false,\n    _last: false,\n    chunkedEncoding: false,\n    shouldKeepAlive: true,\n    maxRequestsOnConnectionReached: false,\n    _defaultKeepAlive: true,\n    useChunkedEncodingByDefault: true,\n    sendDate: true,\n    _removedConnection: false,\n    _removedContLen: false,\n    _removedTE: false,\n    _contentLength: null,\n    _hasBody: true,\n    _trailer: '',\n    finished: false,\n    _headerSent: false,\n    _closed: false,\n    socket: <ref *1> Socket {\n      connecting: false,\n      _hadError: false,\n      _parent: null,\n      _host: null,\n      _readableState: [ReadableState],\n      _events: [Object: null prototype],\n      _eventsCount: 8,\n      _maxListeners: undefined,\n      _writableState: [WritableState],\n      allowHalfOpen: true,\n      _sockname: null,\n      _pendingData: null,\n      _pendingEncoding: '',\n      server: [Server],\n      _server: [Server],\n      parser: [HTTPParser],\n      on: [Function: socketListenerWrap],\n      addListener: [Function: socketListenerWrap],\n      prependListener: [Function: socketListenerWrap],\n      setEncoding: [Function: socketSetEncoding],\n      _paused: false,\n      _httpMessage: [Circular *3],\n      [Symbol(async_id_symbol)]: 529,\n      [Symbol(kHandle)]: [TCP],\n      [Symbol(lastWriteQueueSize)]: 0,\n      [Symbol(timeout)]: null,\n      [Symbol(kBuffer)]: null,\n      [Symbol(kBufferCb)]: null,\n      [Symbol(kBufferGen)]: null,\n      [Symbol(kCapture)]: false,\n      [Symbol(kSetNoDelay)]: false,\n      [Symbol(kSetKeepAlive)]: false,\n      [Symbol(kSetKeepAliveInitialDelay)]: 0,\n      [Symbol(kBytesRead)]: 0,\n      [Symbol(kBytesWritten)]: 0,\n      [Symbol(RequestTimeout)]: undefined\n    },\n    _header: null,\n    _keepAliveTimeout: 5000,\n    _onPendingData: [Function: bound updateOutgoingData],\n    req: [Circular *2],\n    _sent100: false,\n    _expect_continue: false,\n    locals: [Object: null prototype] {},\n    writeHead: [Function: writeHead],\n    end: [Function: end],\n    [Symbol(kCapture)]: false,\n    [Symbol(kNeedDrain)]: false,\n    [Symbol(corked)]: 0,\n    [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] },\n    [Symbol(kUniqueHeaders)]: null\n  },\n  body: { email: 'graciousadamu@gmail.com', password: 'Joshua' },\n  _body: true,\n  length: undefined,\n  _parsedOriginalUrl: Url {\n    protocol: null,\n    slashes: null,\n    auth: null,\n    host: null,\n    port: null,\n    hostname: null,\n    hash: null,\n    search: null,\n    query: null,\n    pathname: '/login',\n    path: '/login',\n    href: '/login',\n    _raw: '/login'\n  },\n  sessionStore: MemoryStore {\n    _events: [Object: null prototype] {\n      disconnect: [Function: ondisconnect],\n      connect: [Function: onconnect]\n    },\n    _eventsCount: 2,\n    _maxListeners: undefined,\n    sessions: [Object: null prototype] {\n      '8WaCUmXiMZai4YWJETrqkTNJ76M-JgnN': '{\"cookie\":{\"originalMaxAge\":null,\"expires\":null,\"httpOnly\":true,\"path\":\"/\"}}'\n    },\n    generate: [Function (anonymous)],\n    [Symbol(kCapture)]: false\n  },\n  sessionID: '8WaCUmXiMZai4YWJETrqkTNJ76M-JgnN',\n  session: Session {\n    cookie: { path: '/', _expires: null, originalMaxAge: null, httpOnly: true }\n  },\n  route: Route { path: '/login', stack: [ [Layer] ], methods: { post: true } },\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: {\n    host: 'localhost:5000',\n    connection: 'keep-alive',\n    'content-length': '47',\n    'cache-control': 'max-age=0',\n    'sec-ch-ua': '\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"',\n    'sec-ch-ua-mobile': '?0',\n    'sec-ch-ua-platform': '\"Windows\"',\n    'upgrade-insecure-requests': '1',\n    origin: 'http://localhost:5000',\n    'content-type': 'application/x-www-form-urlencoded',\n    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36',\n    accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',\n    'sec-fetch-site': 'same-origin',\n    'sec-fetch-mode': 'navigate',\n    'sec-fetch-user': '?1',\n    'sec-fetch-dest': 'document',\n    referer: 'http://localhost:5000/',\n    'accept-encoding': 'gzip, deflate, br',\n    'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8',\n    cookie: 'connect.sid=s%3A8WaCUmXiMZai4YWJETrqkTNJ76M-JgnN.f%2BJi91rHrITAdVKhA25dNeIup%2FevvodPqkG2zUO%2Buyw; ph_phc_cjuWI21zkiw3B30S2vdrLd2HtfmqRWuzZMldJrXEpPw_posthog=%7B%22distinct_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24device_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24user_state%22%3A%22anonymous%22%2C%22%24referrer%22%3A%22http%3A%2F%2Flocalhost%3A5000%2F%22%2C%22%24referring_domain%22%3A%22localhost%3A5000%22%2C%22%24sesid%22%3A%5B1699545758275%2C%2218bb4d0a7a8312-03b7b50ca08009-26031051-144000-18bb4d0a7a933a%22%2C1699545655208%5D%2C%22%24session_recording_enabled_server_side%22%3Afalse%2C%22%24active_feature_flags%22%3A%5B%5D%2C%22%24enabled_feature_flags%22%3A%7B%7D%2C%22%24feature_flag_payloads%22%3A%7B%7D%7D'\n  },\n  [Symbol(kHeadersCount)]: 40,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0,\n  [Symbol(RequestTimeout)]: undefined\n}\" (type IncomingMessage) at path \"email\" for model \"Users\"","timestamp":"2023-11-09T16:02:38.324Z"}
{"level":"error","message":"Cast to string failed for value \"<ref *2> IncomingMessage {\n  _readableState: ReadableState {\n    objectMode: false,\n    highWaterMark: 16384,\n    buffer: BufferList { head: null, tail: null, length: 0 },\n    length: 0,\n    pipes: [],\n    flowing: true,\n    ended: true,\n    endEmitted: true,\n    reading: false,\n    constructed: true,\n    sync: false,\n    needReadable: false,\n    emittedReadable: false,\n    readableListening: false,\n    resumeScheduled: false,\n    errorEmitted: false,\n    emitClose: true,\n    autoDestroy: true,\n    destroyed: true,\n    errored: null,\n    closed: true,\n    closeEmitted: true,\n    defaultEncoding: 'utf8',\n    awaitDrainWriters: null,\n    multiAwaitDrain: false,\n    readingMore: false,\n    dataEmitted: true,\n    decoder: null,\n    encoding: null,\n    [Symbol(kPaused)]: false\n  },\n  _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },\n  _eventsCount: 1,\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: [],\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      constructed: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      destroyed: false,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      dataEmitted: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    _events: [Object: null prototype] {\n      end: [Array],\n      timeout: [Function: socketOnTimeout],\n      data: [Function: bound socketOnData],\n      error: [Function: socketOnError],\n      close: [Array],\n      drain: [Function: bound socketOnDrain],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      buffered: [],\n      bufferedIndex: 0,\n      allBuffers: true,\n      allNoop: true,\n      pendingcb: 0,\n      constructed: true,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      [Symbol(kOnFinished)]: []\n    },\n    allowHalfOpen: true,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    parser: HTTPParser {\n      '0': [Function: bound setRequestTimeout],\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *1],\n      incoming: [Circular *2],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      _closed: false,\n      socket: [Circular *1],\n      _header: null,\n      _keepAliveTimeout: 5000,\n      _onPendingData: [Function: bound updateOutgoingData],\n      req: [Circular *2],\n      _sent100: false,\n      _expect_continue: false,\n      locals: [Object: null prototype] {},\n      writeHead: [Function: writeHead],\n      end: [Function: end],\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype],\n      [Symbol(kUniqueHeaders)]: null\n    },\n    [Symbol(async_id_symbol)]: 585,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      [Symbol(owner_symbol)]: [Circular *1]\n    },\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: null,\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(kSetKeepAlive)]: false,\n    [Symbol(kSetKeepAliveInitialDelay)]: 0,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0,\n    [Symbol(RequestTimeout)]: undefined\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [\n    'Host',\n    'localhost:5000',\n    'Connection',\n    'keep-alive',\n    'Content-Length',\n    '47',\n    'Cache-Control',\n    'max-age=0',\n    'sec-ch-ua',\n    '\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"',\n    'sec-ch-ua-mobile',\n    '?0',\n    'sec-ch-ua-platform',\n    '\"Windows\"',\n    'Upgrade-Insecure-Requests',\n    '1',\n    'Origin',\n    'http://localhost:5000',\n    'Content-Type',\n    'application/x-www-form-urlencoded',\n    'User-Agent',\n    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36',\n    'Accept',\n    'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',\n    'Sec-Fetch-Site',\n    'same-origin',\n    'Sec-Fetch-Mode',\n    'navigate',\n    'Sec-Fetch-User',\n    '?1',\n    'Sec-Fetch-Dest',\n    'document',\n    'Referer',\n    'http://localhost:5000/',\n    'Accept-Encoding',\n    'gzip, deflate, br',\n    'Accept-Language',\n    'en-GB,en-US;q=0.9,en;q=0.8',\n    'Cookie',\n    'connect.sid=s%3A8WaCUmXiMZai4YWJETrqkTNJ76M-JgnN.f%2BJi91rHrITAdVKhA25dNeIup%2FevvodPqkG2zUO%2Buyw; ph_phc_cjuWI21zkiw3B30S2vdrLd2HtfmqRWuzZMldJrXEpPw_posthog=%7B%22distinct_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24device_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24user_state%22%3A%22anonymous%22%2C%22%24referrer%22%3A%22http%3A%2F%2Flocalhost%3A5000%2F%22%2C%22%24referring_domain%22%3A%22localhost%3A5000%22%2C%22%24sesid%22%3A%5B1699545759178%2C%2218bb4d0a7a8312-03b7b50ca08009-26031051-144000-18bb4d0a7a933a%22%2C1699545655208%5D%2C%22%24session_recording_enabled_server_side%22%3Afalse%2C%22%24active_feature_flags%22%3A%5B%5D%2C%22%24enabled_feature_flags%22%3A%7B%7D%2C%22%24feature_flag_payloads%22%3A%7B%7D%7D'\n  ],\n  rawTrailers: [],\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: [],\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      constructed: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      destroyed: false,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      dataEmitted: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    _events: [Object: null prototype] {\n      end: [Array],\n      timeout: [Function: socketOnTimeout],\n      data: [Function: bound socketOnData],\n      error: [Function: socketOnError],\n      close: [Array],\n      drain: [Function: bound socketOnDrain],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      buffered: [],\n      bufferedIndex: 0,\n      allBuffers: true,\n      allNoop: true,\n      pendingcb: 0,\n      constructed: true,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      [Symbol(kOnFinished)]: []\n    },\n    allowHalfOpen: true,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    parser: HTTPParser {\n      '0': [Function: bound setRequestTimeout],\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *1],\n      incoming: [Circular *2],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      _closed: false,\n      socket: [Circular *1],\n      _header: null,\n      _keepAliveTimeout: 5000,\n      _onPendingData: [Function: bound updateOutgoingData],\n      req: [Circular *2],\n      _sent100: false,\n      _expect_continue: false,\n      locals: [Object: null prototype] {},\n      writeHead: [Function: writeHead],\n      end: [Function: end],\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype],\n      [Symbol(kUniqueHeaders)]: null\n    },\n    [Symbol(async_id_symbol)]: 585,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      [Symbol(owner_symbol)]: [Circular *1]\n    },\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: null,\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(kSetKeepAlive)]: false,\n    [Symbol(kSetKeepAliveInitialDelay)]: 0,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0,\n    [Symbol(RequestTimeout)]: undefined\n  },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/login',\n  _parsedUrl: Url {\n    protocol: null,\n    slashes: null,\n    auth: null,\n    host: null,\n    port: null,\n    hostname: null,\n    hash: null,\n    search: null,\n    query: null,\n    pathname: '/login',\n    path: '/login',\n    href: '/login',\n    _raw: '/login'\n  },\n  params: {},\n  query: {},\n  res: <ref *3> ServerResponse {\n    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },\n    _eventsCount: 1,\n    _maxListeners: undefined,\n    outputData: [],\n    outputSize: 0,\n    writable: true,\n    destroyed: false,\n    _last: false,\n    chunkedEncoding: false,\n    shouldKeepAlive: true,\n    maxRequestsOnConnectionReached: false,\n    _defaultKeepAlive: true,\n    useChunkedEncodingByDefault: true,\n    sendDate: true,\n    _removedConnection: false,\n    _removedContLen: false,\n    _removedTE: false,\n    _contentLength: null,\n    _hasBody: true,\n    _trailer: '',\n    finished: false,\n    _headerSent: false,\n    _closed: false,\n    socket: <ref *1> Socket {\n      connecting: false,\n      _hadError: false,\n      _parent: null,\n      _host: null,\n      _readableState: [ReadableState],\n      _events: [Object: null prototype],\n      _eventsCount: 8,\n      _maxListeners: undefined,\n      _writableState: [WritableState],\n      allowHalfOpen: true,\n      _sockname: null,\n      _pendingData: null,\n      _pendingEncoding: '',\n      server: [Server],\n      _server: [Server],\n      parser: [HTTPParser],\n      on: [Function: socketListenerWrap],\n      addListener: [Function: socketListenerWrap],\n      prependListener: [Function: socketListenerWrap],\n      setEncoding: [Function: socketSetEncoding],\n      _paused: false,\n      _httpMessage: [Circular *3],\n      [Symbol(async_id_symbol)]: 585,\n      [Symbol(kHandle)]: [TCP],\n      [Symbol(lastWriteQueueSize)]: 0,\n      [Symbol(timeout)]: null,\n      [Symbol(kBuffer)]: null,\n      [Symbol(kBufferCb)]: null,\n      [Symbol(kBufferGen)]: null,\n      [Symbol(kCapture)]: false,\n      [Symbol(kSetNoDelay)]: false,\n      [Symbol(kSetKeepAlive)]: false,\n      [Symbol(kSetKeepAliveInitialDelay)]: 0,\n      [Symbol(kBytesRead)]: 0,\n      [Symbol(kBytesWritten)]: 0,\n      [Symbol(RequestTimeout)]: undefined\n    },\n    _header: null,\n    _keepAliveTimeout: 5000,\n    _onPendingData: [Function: bound updateOutgoingData],\n    req: [Circular *2],\n    _sent100: false,\n    _expect_continue: false,\n    locals: [Object: null prototype] {},\n    writeHead: [Function: writeHead],\n    end: [Function: end],\n    [Symbol(kCapture)]: false,\n    [Symbol(kNeedDrain)]: false,\n    [Symbol(corked)]: 0,\n    [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] },\n    [Symbol(kUniqueHeaders)]: null\n  },\n  body: { email: 'graciousadamu@gmail.com', password: 'Joshua' },\n  _body: true,\n  length: undefined,\n  _parsedOriginalUrl: Url {\n    protocol: null,\n    slashes: null,\n    auth: null,\n    host: null,\n    port: null,\n    hostname: null,\n    hash: null,\n    search: null,\n    query: null,\n    pathname: '/login',\n    path: '/login',\n    href: '/login',\n    _raw: '/login'\n  },\n  sessionStore: MemoryStore {\n    _events: [Object: null prototype] {\n      disconnect: [Function: ondisconnect],\n      connect: [Function: onconnect]\n    },\n    _eventsCount: 2,\n    _maxListeners: undefined,\n    sessions: [Object: null prototype] {\n      '8WaCUmXiMZai4YWJETrqkTNJ76M-JgnN': '{\"cookie\":{\"originalMaxAge\":null,\"expires\":null,\"httpOnly\":true,\"path\":\"/\"}}'\n    },\n    generate: [Function (anonymous)],\n    [Symbol(kCapture)]: false\n  },\n  sessionID: '8WaCUmXiMZai4YWJETrqkTNJ76M-JgnN',\n  session: Session {\n    cookie: { path: '/', _expires: null, originalMaxAge: null, httpOnly: true }\n  },\n  route: Route { path: '/login', stack: [ [Layer] ], methods: { post: true } },\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: {\n    host: 'localhost:5000',\n    connection: 'keep-alive',\n    'content-length': '47',\n    'cache-control': 'max-age=0',\n    'sec-ch-ua': '\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"',\n    'sec-ch-ua-mobile': '?0',\n    'sec-ch-ua-platform': '\"Windows\"',\n    'upgrade-insecure-requests': '1',\n    origin: 'http://localhost:5000',\n    'content-type': 'application/x-www-form-urlencoded',\n    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36',\n    accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',\n    'sec-fetch-site': 'same-origin',\n    'sec-fetch-mode': 'navigate',\n    'sec-fetch-user': '?1',\n    'sec-fetch-dest': 'document',\n    referer: 'http://localhost:5000/',\n    'accept-encoding': 'gzip, deflate, br',\n    'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8',\n    cookie: 'connect.sid=s%3A8WaCUmXiMZai4YWJETrqkTNJ76M-JgnN.f%2BJi91rHrITAdVKhA25dNeIup%2FevvodPqkG2zUO%2Buyw; ph_phc_cjuWI21zkiw3B30S2vdrLd2HtfmqRWuzZMldJrXEpPw_posthog=%7B%22distinct_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24device_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24user_state%22%3A%22anonymous%22%2C%22%24referrer%22%3A%22http%3A%2F%2Flocalhost%3A5000%2F%22%2C%22%24referring_domain%22%3A%22localhost%3A5000%22%2C%22%24sesid%22%3A%5B1699545759178%2C%2218bb4d0a7a8312-03b7b50ca08009-26031051-144000-18bb4d0a7a933a%22%2C1699545655208%5D%2C%22%24session_recording_enabled_server_side%22%3Afalse%2C%22%24active_feature_flags%22%3A%5B%5D%2C%22%24enabled_feature_flags%22%3A%7B%7D%2C%22%24feature_flag_payloads%22%3A%7B%7D%7D'\n  },\n  [Symbol(kHeadersCount)]: 40,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0,\n  [Symbol(RequestTimeout)]: undefined\n}\" (type IncomingMessage) at path \"email\" for model \"Users\"","timestamp":"2023-11-09T16:02:39.230Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-09T16:05:18.042Z"}
{"level":"error","message":"Cast to string failed for value \"<ref *2> IncomingMessage {\n  _readableState: ReadableState {\n    objectMode: false,\n    highWaterMark: 16384,\n    buffer: BufferList { head: null, tail: null, length: 0 },\n    length: 0,\n    pipes: [],\n    flowing: true,\n    ended: true,\n    endEmitted: true,\n    reading: false,\n    constructed: true,\n    sync: false,\n    needReadable: false,\n    emittedReadable: false,\n    readableListening: false,\n    resumeScheduled: false,\n    errorEmitted: false,\n    emitClose: true,\n    autoDestroy: true,\n    destroyed: true,\n    errored: null,\n    closed: true,\n    closeEmitted: true,\n    defaultEncoding: 'utf8',\n    awaitDrainWriters: null,\n    multiAwaitDrain: false,\n    readingMore: false,\n    dataEmitted: true,\n    decoder: null,\n    encoding: null,\n    [Symbol(kPaused)]: false\n  },\n  _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },\n  _eventsCount: 1,\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: [],\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      constructed: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      destroyed: false,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      dataEmitted: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    _events: [Object: null prototype] {\n      end: [Array],\n      timeout: [Function: socketOnTimeout],\n      data: [Function: bound socketOnData],\n      error: [Function: socketOnError],\n      close: [Array],\n      drain: [Function: bound socketOnDrain],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      buffered: [],\n      bufferedIndex: 0,\n      allBuffers: true,\n      allNoop: true,\n      pendingcb: 0,\n      constructed: true,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      [Symbol(kOnFinished)]: []\n    },\n    allowHalfOpen: true,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    parser: HTTPParser {\n      '0': [Function: bound setRequestTimeout],\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *1],\n      incoming: [Circular *2],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      _closed: false,\n      socket: [Circular *1],\n      _header: null,\n      _keepAliveTimeout: 5000,\n      _onPendingData: [Function: bound updateOutgoingData],\n      req: [Circular *2],\n      _sent100: false,\n      _expect_continue: false,\n      locals: [Object: null prototype] {},\n      writeHead: [Function: writeHead],\n      end: [Function: end],\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype],\n      [Symbol(kUniqueHeaders)]: null\n    },\n    [Symbol(async_id_symbol)]: 180,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      [Symbol(owner_symbol)]: [Circular *1]\n    },\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: null,\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(kSetKeepAlive)]: false,\n    [Symbol(kSetKeepAliveInitialDelay)]: 0,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0,\n    [Symbol(RequestTimeout)]: undefined\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [\n    'Host',\n    'localhost:5000',\n    'Connection',\n    'keep-alive',\n    'Content-Length',\n    '47',\n    'Cache-Control',\n    'max-age=0',\n    'sec-ch-ua',\n    '\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"',\n    'sec-ch-ua-mobile',\n    '?0',\n    'sec-ch-ua-platform',\n    '\"Windows\"',\n    'Upgrade-Insecure-Requests',\n    '1',\n    'Origin',\n    'http://localhost:5000',\n    'Content-Type',\n    'application/x-www-form-urlencoded',\n    'User-Agent',\n    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36',\n    'Accept',\n    'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',\n    'Sec-Fetch-Site',\n    'same-origin',\n    'Sec-Fetch-Mode',\n    'navigate',\n    'Sec-Fetch-User',\n    '?1',\n    'Sec-Fetch-Dest',\n    'document',\n    'Referer',\n    'http://localhost:5000/',\n    'Accept-Encoding',\n    'gzip, deflate, br',\n    'Accept-Language',\n    'en-GB,en-US;q=0.9,en;q=0.8',\n    'Cookie',\n    'connect.sid=s%3A8WaCUmXiMZai4YWJETrqkTNJ76M-JgnN.f%2BJi91rHrITAdVKhA25dNeIup%2FevvodPqkG2zUO%2Buyw; ph_phc_cjuWI21zkiw3B30S2vdrLd2HtfmqRWuzZMldJrXEpPw_posthog=%7B%22distinct_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24device_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24user_state%22%3A%22anonymous%22%2C%22%24referrer%22%3A%22http%3A%2F%2Flocalhost%3A5000%2F%22%2C%22%24referring_domain%22%3A%22localhost%3A5000%22%2C%22%24sesid%22%3A%5B1699545970233%2C%2218bb4d0a7a8312-03b7b50ca08009-26031051-144000-18bb4d0a7a933a%22%2C1699545655208%5D%2C%22%24session_recording_enabled_server_side%22%3Afalse%2C%22%24active_feature_flags%22%3A%5B%5D%2C%22%24enabled_feature_flags%22%3A%7B%7D%2C%22%24feature_flag_payloads%22%3A%7B%7D%7D'\n  ],\n  rawTrailers: [],\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: [],\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      constructed: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      destroyed: false,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      dataEmitted: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    _events: [Object: null prototype] {\n      end: [Array],\n      timeout: [Function: socketOnTimeout],\n      data: [Function: bound socketOnData],\n      error: [Function: socketOnError],\n      close: [Array],\n      drain: [Function: bound socketOnDrain],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      buffered: [],\n      bufferedIndex: 0,\n      allBuffers: true,\n      allNoop: true,\n      pendingcb: 0,\n      constructed: true,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      [Symbol(kOnFinished)]: []\n    },\n    allowHalfOpen: true,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    parser: HTTPParser {\n      '0': [Function: bound setRequestTimeout],\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *1],\n      incoming: [Circular *2],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      _closed: false,\n      socket: [Circular *1],\n      _header: null,\n      _keepAliveTimeout: 5000,\n      _onPendingData: [Function: bound updateOutgoingData],\n      req: [Circular *2],\n      _sent100: false,\n      _expect_continue: false,\n      locals: [Object: null prototype] {},\n      writeHead: [Function: writeHead],\n      end: [Function: end],\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype],\n      [Symbol(kUniqueHeaders)]: null\n    },\n    [Symbol(async_id_symbol)]: 180,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      [Symbol(owner_symbol)]: [Circular *1]\n    },\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: null,\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(kSetKeepAlive)]: false,\n    [Symbol(kSetKeepAliveInitialDelay)]: 0,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0,\n    [Symbol(RequestTimeout)]: undefined\n  },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/login',\n  _parsedUrl: Url {\n    protocol: null,\n    slashes: null,\n    auth: null,\n    host: null,\n    port: null,\n    hostname: null,\n    hash: null,\n    search: null,\n    query: null,\n    pathname: '/login',\n    path: '/login',\n    href: '/login',\n    _raw: '/login'\n  },\n  params: {},\n  query: {},\n  res: <ref *3> ServerResponse {\n    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },\n    _eventsCount: 1,\n    _maxListeners: undefined,\n    outputData: [],\n    outputSize: 0,\n    writable: true,\n    destroyed: false,\n    _last: false,\n    chunkedEncoding: false,\n    shouldKeepAlive: true,\n    maxRequestsOnConnectionReached: false,\n    _defaultKeepAlive: true,\n    useChunkedEncodingByDefault: true,\n    sendDate: true,\n    _removedConnection: false,\n    _removedContLen: false,\n    _removedTE: false,\n    _contentLength: null,\n    _hasBody: true,\n    _trailer: '',\n    finished: false,\n    _headerSent: false,\n    _closed: false,\n    socket: <ref *1> Socket {\n      connecting: false,\n      _hadError: false,\n      _parent: null,\n      _host: null,\n      _readableState: [ReadableState],\n      _events: [Object: null prototype],\n      _eventsCount: 8,\n      _maxListeners: undefined,\n      _writableState: [WritableState],\n      allowHalfOpen: true,\n      _sockname: null,\n      _pendingData: null,\n      _pendingEncoding: '',\n      server: [Server],\n      _server: [Server],\n      parser: [HTTPParser],\n      on: [Function: socketListenerWrap],\n      addListener: [Function: socketListenerWrap],\n      prependListener: [Function: socketListenerWrap],\n      setEncoding: [Function: socketSetEncoding],\n      _paused: false,\n      _httpMessage: [Circular *3],\n      [Symbol(async_id_symbol)]: 180,\n      [Symbol(kHandle)]: [TCP],\n      [Symbol(lastWriteQueueSize)]: 0,\n      [Symbol(timeout)]: null,\n      [Symbol(kBuffer)]: null,\n      [Symbol(kBufferCb)]: null,\n      [Symbol(kBufferGen)]: null,\n      [Symbol(kCapture)]: false,\n      [Symbol(kSetNoDelay)]: false,\n      [Symbol(kSetKeepAlive)]: false,\n      [Symbol(kSetKeepAliveInitialDelay)]: 0,\n      [Symbol(kBytesRead)]: 0,\n      [Symbol(kBytesWritten)]: 0,\n      [Symbol(RequestTimeout)]: undefined\n    },\n    _header: null,\n    _keepAliveTimeout: 5000,\n    _onPendingData: [Function: bound updateOutgoingData],\n    req: [Circular *2],\n    _sent100: false,\n    _expect_continue: false,\n    locals: [Object: null prototype] {},\n    writeHead: [Function: writeHead],\n    end: [Function: end],\n    [Symbol(kCapture)]: false,\n    [Symbol(kNeedDrain)]: false,\n    [Symbol(corked)]: 0,\n    [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] },\n    [Symbol(kUniqueHeaders)]: null\n  },\n  body: { email: 'graciousadamu@gmail.com', password: 'Joshua' },\n  _body: true,\n  length: undefined,\n  _parsedOriginalUrl: Url {\n    protocol: null,\n    slashes: null,\n    auth: null,\n    host: null,\n    port: null,\n    hostname: null,\n    hash: null,\n    search: null,\n    query: null,\n    pathname: '/login',\n    path: '/login',\n    href: '/login',\n    _raw: '/login'\n  },\n  sessionStore: MemoryStore {\n    _events: [Object: null prototype] {\n      disconnect: [Function: ondisconnect],\n      connect: [Function: onconnect]\n    },\n    _eventsCount: 2,\n    _maxListeners: undefined,\n    sessions: [Object: null prototype] {},\n    generate: [Function (anonymous)],\n    [Symbol(kCapture)]: false\n  },\n  sessionID: 'veJzAafr1I5DL7nAfCVWc_gkCBGuqbKT',\n  session: Session {\n    cookie: { path: '/', _expires: null, originalMaxAge: null, httpOnly: true }\n  },\n  route: Route { path: '/login', stack: [ [Layer] ], methods: { post: true } },\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: {\n    host: 'localhost:5000',\n    connection: 'keep-alive',\n    'content-length': '47',\n    'cache-control': 'max-age=0',\n    'sec-ch-ua': '\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"',\n    'sec-ch-ua-mobile': '?0',\n    'sec-ch-ua-platform': '\"Windows\"',\n    'upgrade-insecure-requests': '1',\n    origin: 'http://localhost:5000',\n    'content-type': 'application/x-www-form-urlencoded',\n    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36',\n    accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',\n    'sec-fetch-site': 'same-origin',\n    'sec-fetch-mode': 'navigate',\n    'sec-fetch-user': '?1',\n    'sec-fetch-dest': 'document',\n    referer: 'http://localhost:5000/',\n    'accept-encoding': 'gzip, deflate, br',\n    'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8',\n    cookie: 'connect.sid=s%3A8WaCUmXiMZai4YWJETrqkTNJ76M-JgnN.f%2BJi91rHrITAdVKhA25dNeIup%2FevvodPqkG2zUO%2Buyw; ph_phc_cjuWI21zkiw3B30S2vdrLd2HtfmqRWuzZMldJrXEpPw_posthog=%7B%22distinct_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24device_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24user_state%22%3A%22anonymous%22%2C%22%24referrer%22%3A%22http%3A%2F%2Flocalhost%3A5000%2F%22%2C%22%24referring_domain%22%3A%22localhost%3A5000%22%2C%22%24sesid%22%3A%5B1699545970233%2C%2218bb4d0a7a8312-03b7b50ca08009-26031051-144000-18bb4d0a7a933a%22%2C1699545655208%5D%2C%22%24session_recording_enabled_server_side%22%3Afalse%2C%22%24active_feature_flags%22%3A%5B%5D%2C%22%24enabled_feature_flags%22%3A%7B%7D%2C%22%24feature_flag_payloads%22%3A%7B%7D%7D'\n  },\n  [Symbol(kHeadersCount)]: 40,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0,\n  [Symbol(RequestTimeout)]: undefined\n}\" (type IncomingMessage) at path \"email\" for model \"Users\"","timestamp":"2023-11-09T16:06:10.395Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-09T16:08:55.067Z"}
{"level":"error","message":"Cast to string failed for value \"<ref *2> IncomingMessage {\n  _readableState: ReadableState {\n    objectMode: false,\n    highWaterMark: 16384,\n    buffer: BufferList { head: null, tail: null, length: 0 },\n    length: 0,\n    pipes: [],\n    flowing: true,\n    ended: true,\n    endEmitted: true,\n    reading: false,\n    constructed: true,\n    sync: false,\n    needReadable: false,\n    emittedReadable: false,\n    readableListening: false,\n    resumeScheduled: false,\n    errorEmitted: false,\n    emitClose: true,\n    autoDestroy: true,\n    destroyed: true,\n    errored: null,\n    closed: true,\n    closeEmitted: true,\n    defaultEncoding: 'utf8',\n    awaitDrainWriters: null,\n    multiAwaitDrain: false,\n    readingMore: false,\n    dataEmitted: true,\n    decoder: null,\n    encoding: null,\n    [Symbol(kPaused)]: false\n  },\n  _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },\n  _eventsCount: 1,\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: [],\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      constructed: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      destroyed: false,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      dataEmitted: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    _events: [Object: null prototype] {\n      end: [Array],\n      timeout: [Function: socketOnTimeout],\n      data: [Function: bound socketOnData],\n      error: [Function: socketOnError],\n      close: [Array],\n      drain: [Function: bound socketOnDrain],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      buffered: [],\n      bufferedIndex: 0,\n      allBuffers: true,\n      allNoop: true,\n      pendingcb: 0,\n      constructed: true,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      [Symbol(kOnFinished)]: []\n    },\n    allowHalfOpen: true,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    parser: HTTPParser {\n      '0': [Function: bound setRequestTimeout],\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *1],\n      incoming: [Circular *2],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      _closed: false,\n      socket: [Circular *1],\n      _header: null,\n      _keepAliveTimeout: 5000,\n      _onPendingData: [Function: bound updateOutgoingData],\n      req: [Circular *2],\n      _sent100: false,\n      _expect_continue: false,\n      locals: [Object: null prototype] {},\n      writeHead: [Function: writeHead],\n      end: [Function: end],\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype],\n      [Symbol(kUniqueHeaders)]: null\n    },\n    [Symbol(async_id_symbol)]: 120,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      [Symbol(owner_symbol)]: [Circular *1]\n    },\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: null,\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(kSetKeepAlive)]: false,\n    [Symbol(kSetKeepAliveInitialDelay)]: 0,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0,\n    [Symbol(RequestTimeout)]: undefined\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [\n    'Host',\n    'localhost:5000',\n    'Connection',\n    'keep-alive',\n    'Content-Length',\n    '47',\n    'Cache-Control',\n    'max-age=0',\n    'sec-ch-ua',\n    '\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"',\n    'sec-ch-ua-mobile',\n    '?0',\n    'sec-ch-ua-platform',\n    '\"Windows\"',\n    'Upgrade-Insecure-Requests',\n    '1',\n    'Origin',\n    'http://localhost:5000',\n    'Content-Type',\n    'application/x-www-form-urlencoded',\n    'User-Agent',\n    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36',\n    'Accept',\n    'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',\n    'Sec-Fetch-Site',\n    'same-origin',\n    'Sec-Fetch-Mode',\n    'navigate',\n    'Sec-Fetch-User',\n    '?1',\n    'Sec-Fetch-Dest',\n    'document',\n    'Referer',\n    'http://localhost:5000/',\n    'Accept-Encoding',\n    'gzip, deflate, br',\n    'Accept-Language',\n    'en-GB,en-US;q=0.9,en;q=0.8',\n    'Cookie',\n    'connect.sid=s%3A8WaCUmXiMZai4YWJETrqkTNJ76M-JgnN.f%2BJi91rHrITAdVKhA25dNeIup%2FevvodPqkG2zUO%2Buyw; ph_phc_cjuWI21zkiw3B30S2vdrLd2HtfmqRWuzZMldJrXEpPw_posthog=%7B%22distinct_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24device_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24user_state%22%3A%22anonymous%22%2C%22%24referrer%22%3A%22http%3A%2F%2Flocalhost%3A5000%2F%22%2C%22%24referring_domain%22%3A%22localhost%3A5000%22%2C%22%24sesid%22%3A%5B1699546141763%2C%2218bb4d0a7a8312-03b7b50ca08009-26031051-144000-18bb4d0a7a933a%22%2C1699545655208%5D%2C%22%24session_recording_enabled_server_side%22%3Afalse%2C%22%24active_feature_flags%22%3A%5B%5D%2C%22%24enabled_feature_flags%22%3A%7B%7D%2C%22%24feature_flag_payloads%22%3A%7B%7D%7D'\n  ],\n  rawTrailers: [],\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: [],\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      constructed: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      destroyed: false,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      dataEmitted: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    _events: [Object: null prototype] {\n      end: [Array],\n      timeout: [Function: socketOnTimeout],\n      data: [Function: bound socketOnData],\n      error: [Function: socketOnError],\n      close: [Array],\n      drain: [Function: bound socketOnDrain],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      buffered: [],\n      bufferedIndex: 0,\n      allBuffers: true,\n      allNoop: true,\n      pendingcb: 0,\n      constructed: true,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      [Symbol(kOnFinished)]: []\n    },\n    allowHalfOpen: true,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    parser: HTTPParser {\n      '0': [Function: bound setRequestTimeout],\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *1],\n      incoming: [Circular *2],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      _closed: false,\n      socket: [Circular *1],\n      _header: null,\n      _keepAliveTimeout: 5000,\n      _onPendingData: [Function: bound updateOutgoingData],\n      req: [Circular *2],\n      _sent100: false,\n      _expect_continue: false,\n      locals: [Object: null prototype] {},\n      writeHead: [Function: writeHead],\n      end: [Function: end],\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype],\n      [Symbol(kUniqueHeaders)]: null\n    },\n    [Symbol(async_id_symbol)]: 120,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      [Symbol(owner_symbol)]: [Circular *1]\n    },\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: null,\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(kSetKeepAlive)]: false,\n    [Symbol(kSetKeepAliveInitialDelay)]: 0,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0,\n    [Symbol(RequestTimeout)]: undefined\n  },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/login',\n  _parsedUrl: Url {\n    protocol: null,\n    slashes: null,\n    auth: null,\n    host: null,\n    port: null,\n    hostname: null,\n    hash: null,\n    search: null,\n    query: null,\n    pathname: '/login',\n    path: '/login',\n    href: '/login',\n    _raw: '/login'\n  },\n  params: {},\n  query: {},\n  res: <ref *3> ServerResponse {\n    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },\n    _eventsCount: 1,\n    _maxListeners: undefined,\n    outputData: [],\n    outputSize: 0,\n    writable: true,\n    destroyed: false,\n    _last: false,\n    chunkedEncoding: false,\n    shouldKeepAlive: true,\n    maxRequestsOnConnectionReached: false,\n    _defaultKeepAlive: true,\n    useChunkedEncodingByDefault: true,\n    sendDate: true,\n    _removedConnection: false,\n    _removedContLen: false,\n    _removedTE: false,\n    _contentLength: null,\n    _hasBody: true,\n    _trailer: '',\n    finished: false,\n    _headerSent: false,\n    _closed: false,\n    socket: <ref *1> Socket {\n      connecting: false,\n      _hadError: false,\n      _parent: null,\n      _host: null,\n      _readableState: [ReadableState],\n      _events: [Object: null prototype],\n      _eventsCount: 8,\n      _maxListeners: undefined,\n      _writableState: [WritableState],\n      allowHalfOpen: true,\n      _sockname: null,\n      _pendingData: null,\n      _pendingEncoding: '',\n      server: [Server],\n      _server: [Server],\n      parser: [HTTPParser],\n      on: [Function: socketListenerWrap],\n      addListener: [Function: socketListenerWrap],\n      prependListener: [Function: socketListenerWrap],\n      setEncoding: [Function: socketSetEncoding],\n      _paused: false,\n      _httpMessage: [Circular *3],\n      [Symbol(async_id_symbol)]: 120,\n      [Symbol(kHandle)]: [TCP],\n      [Symbol(lastWriteQueueSize)]: 0,\n      [Symbol(timeout)]: null,\n      [Symbol(kBuffer)]: null,\n      [Symbol(kBufferCb)]: null,\n      [Symbol(kBufferGen)]: null,\n      [Symbol(kCapture)]: false,\n      [Symbol(kSetNoDelay)]: false,\n      [Symbol(kSetKeepAlive)]: false,\n      [Symbol(kSetKeepAliveInitialDelay)]: 0,\n      [Symbol(kBytesRead)]: 0,\n      [Symbol(kBytesWritten)]: 0,\n      [Symbol(RequestTimeout)]: undefined\n    },\n    _header: null,\n    _keepAliveTimeout: 5000,\n    _onPendingData: [Function: bound updateOutgoingData],\n    req: [Circular *2],\n    _sent100: false,\n    _expect_continue: false,\n    locals: [Object: null prototype] {},\n    writeHead: [Function: writeHead],\n    end: [Function: end],\n    [Symbol(kCapture)]: false,\n    [Symbol(kNeedDrain)]: false,\n    [Symbol(corked)]: 0,\n    [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] },\n    [Symbol(kUniqueHeaders)]: null\n  },\n  body: { email: 'graciousadamu@gmail.com', password: 'Joshua' },\n  _body: true,\n  length: undefined,\n  _parsedOriginalUrl: Url {\n    protocol: null,\n    slashes: null,\n    auth: null,\n    host: null,\n    port: null,\n    hostname: null,\n    hash: null,\n    search: null,\n    query: null,\n    pathname: '/login',\n    path: '/login',\n    href: '/login',\n    _raw: '/login'\n  },\n  sessionStore: MemoryStore {\n    _events: [Object: null prototype] {\n      disconnect: [Function: ondisconnect],\n      connect: [Function: onconnect]\n    },\n    _eventsCount: 2,\n    _maxListeners: undefined,\n    sessions: [Object: null prototype] {},\n    generate: [Function (anonymous)],\n    [Symbol(kCapture)]: false\n  },\n  sessionID: 'OkzZF9gHd2PxRX7HYZzx5EEc4MV0xigt',\n  session: Session {\n    cookie: { path: '/', _expires: null, originalMaxAge: null, httpOnly: true }\n  },\n  route: Route { path: '/login', stack: [ [Layer] ], methods: { post: true } },\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: {\n    host: 'localhost:5000',\n    connection: 'keep-alive',\n    'content-length': '47',\n    'cache-control': 'max-age=0',\n    'sec-ch-ua': '\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"',\n    'sec-ch-ua-mobile': '?0',\n    'sec-ch-ua-platform': '\"Windows\"',\n    'upgrade-insecure-requests': '1',\n    origin: 'http://localhost:5000',\n    'content-type': 'application/x-www-form-urlencoded',\n    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36',\n    accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',\n    'sec-fetch-site': 'same-origin',\n    'sec-fetch-mode': 'navigate',\n    'sec-fetch-user': '?1',\n    'sec-fetch-dest': 'document',\n    referer: 'http://localhost:5000/',\n    'accept-encoding': 'gzip, deflate, br',\n    'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8',\n    cookie: 'connect.sid=s%3A8WaCUmXiMZai4YWJETrqkTNJ76M-JgnN.f%2BJi91rHrITAdVKhA25dNeIup%2FevvodPqkG2zUO%2Buyw; ph_phc_cjuWI21zkiw3B30S2vdrLd2HtfmqRWuzZMldJrXEpPw_posthog=%7B%22distinct_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24device_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24user_state%22%3A%22anonymous%22%2C%22%24referrer%22%3A%22http%3A%2F%2Flocalhost%3A5000%2F%22%2C%22%24referring_domain%22%3A%22localhost%3A5000%22%2C%22%24sesid%22%3A%5B1699546141763%2C%2218bb4d0a7a8312-03b7b50ca08009-26031051-144000-18bb4d0a7a933a%22%2C1699545655208%5D%2C%22%24session_recording_enabled_server_side%22%3Afalse%2C%22%24active_feature_flags%22%3A%5B%5D%2C%22%24enabled_feature_flags%22%3A%7B%7D%2C%22%24feature_flag_payloads%22%3A%7B%7D%7D'\n  },\n  [Symbol(kHeadersCount)]: 40,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0,\n  [Symbol(RequestTimeout)]: undefined\n}\" (type IncomingMessage) at path \"email\" for model \"Users\"","timestamp":"2023-11-09T16:09:01.899Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-09T16:12:05.637Z"}
{"level":"error","message":"Cast to string failed for value \"<ref *2> IncomingMessage {\n  _readableState: ReadableState {\n    objectMode: false,\n    highWaterMark: 16384,\n    buffer: BufferList { head: null, tail: null, length: 0 },\n    length: 0,\n    pipes: [],\n    flowing: true,\n    ended: true,\n    endEmitted: true,\n    reading: false,\n    constructed: true,\n    sync: false,\n    needReadable: false,\n    emittedReadable: false,\n    readableListening: false,\n    resumeScheduled: false,\n    errorEmitted: false,\n    emitClose: true,\n    autoDestroy: true,\n    destroyed: true,\n    errored: null,\n    closed: true,\n    closeEmitted: true,\n    defaultEncoding: 'utf8',\n    awaitDrainWriters: null,\n    multiAwaitDrain: false,\n    readingMore: false,\n    dataEmitted: true,\n    decoder: null,\n    encoding: null,\n    [Symbol(kPaused)]: false\n  },\n  _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },\n  _eventsCount: 1,\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: [],\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      constructed: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      destroyed: false,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      dataEmitted: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    _events: [Object: null prototype] {\n      end: [Array],\n      timeout: [Function: socketOnTimeout],\n      data: [Function: bound socketOnData],\n      error: [Function: socketOnError],\n      close: [Array],\n      drain: [Function: bound socketOnDrain],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      buffered: [],\n      bufferedIndex: 0,\n      allBuffers: true,\n      allNoop: true,\n      pendingcb: 0,\n      constructed: true,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      [Symbol(kOnFinished)]: []\n    },\n    allowHalfOpen: true,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    parser: HTTPParser {\n      '0': [Function: bound setRequestTimeout],\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *1],\n      incoming: [Circular *2],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      _closed: false,\n      socket: [Circular *1],\n      _header: null,\n      _keepAliveTimeout: 5000,\n      _onPendingData: [Function: bound updateOutgoingData],\n      req: [Circular *2],\n      _sent100: false,\n      _expect_continue: false,\n      locals: [Object: null prototype] {},\n      writeHead: [Function: writeHead],\n      end: [Function: end],\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype],\n      [Symbol(kUniqueHeaders)]: null\n    },\n    [Symbol(async_id_symbol)]: 120,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      [Symbol(owner_symbol)]: [Circular *1]\n    },\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: null,\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(kSetKeepAlive)]: false,\n    [Symbol(kSetKeepAliveInitialDelay)]: 0,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0,\n    [Symbol(RequestTimeout)]: undefined\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [\n    'Host',\n    'localhost:5000',\n    'Connection',\n    'keep-alive',\n    'Content-Length',\n    '47',\n    'Cache-Control',\n    'max-age=0',\n    'sec-ch-ua',\n    '\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"',\n    'sec-ch-ua-mobile',\n    '?0',\n    'sec-ch-ua-platform',\n    '\"Windows\"',\n    'Upgrade-Insecure-Requests',\n    '1',\n    'Origin',\n    'http://localhost:5000',\n    'Content-Type',\n    'application/x-www-form-urlencoded',\n    'User-Agent',\n    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36',\n    'Accept',\n    'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',\n    'Sec-Fetch-Site',\n    'same-origin',\n    'Sec-Fetch-Mode',\n    'navigate',\n    'Sec-Fetch-User',\n    '?1',\n    'Sec-Fetch-Dest',\n    'document',\n    'Referer',\n    'http://localhost:5000/',\n    'Accept-Encoding',\n    'gzip, deflate, br',\n    'Accept-Language',\n    'en-GB,en-US;q=0.9,en;q=0.8',\n    'Cookie',\n    'connect.sid=s%3A8WaCUmXiMZai4YWJETrqkTNJ76M-JgnN.f%2BJi91rHrITAdVKhA25dNeIup%2FevvodPqkG2zUO%2Buyw; ph_phc_cjuWI21zkiw3B30S2vdrLd2HtfmqRWuzZMldJrXEpPw_posthog=%7B%22distinct_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24device_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24user_state%22%3A%22anonymous%22%2C%22%24referrer%22%3A%22http%3A%2F%2Flocalhost%3A5000%2F%22%2C%22%24referring_domain%22%3A%22localhost%3A5000%22%2C%22%24sesid%22%3A%5B1699546348222%2C%2218bb4d0a7a8312-03b7b50ca08009-26031051-144000-18bb4d0a7a933a%22%2C1699545655208%5D%2C%22%24session_recording_enabled_server_side%22%3Afalse%2C%22%24active_feature_flags%22%3A%5B%5D%2C%22%24enabled_feature_flags%22%3A%7B%7D%2C%22%24feature_flag_payloads%22%3A%7B%7D%7D'\n  ],\n  rawTrailers: [],\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: [],\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      constructed: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      destroyed: false,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      dataEmitted: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    _events: [Object: null prototype] {\n      end: [Array],\n      timeout: [Function: socketOnTimeout],\n      data: [Function: bound socketOnData],\n      error: [Function: socketOnError],\n      close: [Array],\n      drain: [Function: bound socketOnDrain],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      buffered: [],\n      bufferedIndex: 0,\n      allBuffers: true,\n      allNoop: true,\n      pendingcb: 0,\n      constructed: true,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      [Symbol(kOnFinished)]: []\n    },\n    allowHalfOpen: true,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    parser: HTTPParser {\n      '0': [Function: bound setRequestTimeout],\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *1],\n      incoming: [Circular *2],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      _closed: false,\n      socket: [Circular *1],\n      _header: null,\n      _keepAliveTimeout: 5000,\n      _onPendingData: [Function: bound updateOutgoingData],\n      req: [Circular *2],\n      _sent100: false,\n      _expect_continue: false,\n      locals: [Object: null prototype] {},\n      writeHead: [Function: writeHead],\n      end: [Function: end],\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype],\n      [Symbol(kUniqueHeaders)]: null\n    },\n    [Symbol(async_id_symbol)]: 120,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      [Symbol(owner_symbol)]: [Circular *1]\n    },\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: null,\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(kSetKeepAlive)]: false,\n    [Symbol(kSetKeepAliveInitialDelay)]: 0,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0,\n    [Symbol(RequestTimeout)]: undefined\n  },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/login',\n  _parsedUrl: Url {\n    protocol: null,\n    slashes: null,\n    auth: null,\n    host: null,\n    port: null,\n    hostname: null,\n    hash: null,\n    search: null,\n    query: null,\n    pathname: '/login',\n    path: '/login',\n    href: '/login',\n    _raw: '/login'\n  },\n  params: {},\n  query: {},\n  res: <ref *3> ServerResponse {\n    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },\n    _eventsCount: 1,\n    _maxListeners: undefined,\n    outputData: [],\n    outputSize: 0,\n    writable: true,\n    destroyed: false,\n    _last: false,\n    chunkedEncoding: false,\n    shouldKeepAlive: true,\n    maxRequestsOnConnectionReached: false,\n    _defaultKeepAlive: true,\n    useChunkedEncodingByDefault: true,\n    sendDate: true,\n    _removedConnection: false,\n    _removedContLen: false,\n    _removedTE: false,\n    _contentLength: null,\n    _hasBody: true,\n    _trailer: '',\n    finished: false,\n    _headerSent: false,\n    _closed: false,\n    socket: <ref *1> Socket {\n      connecting: false,\n      _hadError: false,\n      _parent: null,\n      _host: null,\n      _readableState: [ReadableState],\n      _events: [Object: null prototype],\n      _eventsCount: 8,\n      _maxListeners: undefined,\n      _writableState: [WritableState],\n      allowHalfOpen: true,\n      _sockname: null,\n      _pendingData: null,\n      _pendingEncoding: '',\n      server: [Server],\n      _server: [Server],\n      parser: [HTTPParser],\n      on: [Function: socketListenerWrap],\n      addListener: [Function: socketListenerWrap],\n      prependListener: [Function: socketListenerWrap],\n      setEncoding: [Function: socketSetEncoding],\n      _paused: false,\n      _httpMessage: [Circular *3],\n      [Symbol(async_id_symbol)]: 120,\n      [Symbol(kHandle)]: [TCP],\n      [Symbol(lastWriteQueueSize)]: 0,\n      [Symbol(timeout)]: null,\n      [Symbol(kBuffer)]: null,\n      [Symbol(kBufferCb)]: null,\n      [Symbol(kBufferGen)]: null,\n      [Symbol(kCapture)]: false,\n      [Symbol(kSetNoDelay)]: false,\n      [Symbol(kSetKeepAlive)]: false,\n      [Symbol(kSetKeepAliveInitialDelay)]: 0,\n      [Symbol(kBytesRead)]: 0,\n      [Symbol(kBytesWritten)]: 0,\n      [Symbol(RequestTimeout)]: undefined\n    },\n    _header: null,\n    _keepAliveTimeout: 5000,\n    _onPendingData: [Function: bound updateOutgoingData],\n    req: [Circular *2],\n    _sent100: false,\n    _expect_continue: false,\n    locals: [Object: null prototype] {},\n    writeHead: [Function: writeHead],\n    end: [Function: end],\n    [Symbol(kCapture)]: false,\n    [Symbol(kNeedDrain)]: false,\n    [Symbol(corked)]: 0,\n    [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] },\n    [Symbol(kUniqueHeaders)]: null\n  },\n  body: { email: 'graciousadamu@gmail.com', password: 'Joshua' },\n  _body: true,\n  length: undefined,\n  _parsedOriginalUrl: Url {\n    protocol: null,\n    slashes: null,\n    auth: null,\n    host: null,\n    port: null,\n    hostname: null,\n    hash: null,\n    search: null,\n    query: null,\n    pathname: '/login',\n    path: '/login',\n    href: '/login',\n    _raw: '/login'\n  },\n  sessionStore: MemoryStore {\n    _events: [Object: null prototype] {\n      disconnect: [Function: ondisconnect],\n      connect: [Function: onconnect]\n    },\n    _eventsCount: 2,\n    _maxListeners: undefined,\n    sessions: [Object: null prototype] {},\n    generate: [Function (anonymous)],\n    [Symbol(kCapture)]: false\n  },\n  sessionID: 'Rgf2ZAoJb1TTUF2hrgG0Dj1HrguROqtH',\n  session: Session {\n    cookie: { path: '/', _expires: null, originalMaxAge: null, httpOnly: true }\n  },\n  route: Route { path: '/login', stack: [ [Layer] ], methods: { post: true } },\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: {\n    host: 'localhost:5000',\n    connection: 'keep-alive',\n    'content-length': '47',\n    'cache-control': 'max-age=0',\n    'sec-ch-ua': '\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"',\n    'sec-ch-ua-mobile': '?0',\n    'sec-ch-ua-platform': '\"Windows\"',\n    'upgrade-insecure-requests': '1',\n    origin: 'http://localhost:5000',\n    'content-type': 'application/x-www-form-urlencoded',\n    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36',\n    accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',\n    'sec-fetch-site': 'same-origin',\n    'sec-fetch-mode': 'navigate',\n    'sec-fetch-user': '?1',\n    'sec-fetch-dest': 'document',\n    referer: 'http://localhost:5000/',\n    'accept-encoding': 'gzip, deflate, br',\n    'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8',\n    cookie: 'connect.sid=s%3A8WaCUmXiMZai4YWJETrqkTNJ76M-JgnN.f%2BJi91rHrITAdVKhA25dNeIup%2FevvodPqkG2zUO%2Buyw; ph_phc_cjuWI21zkiw3B30S2vdrLd2HtfmqRWuzZMldJrXEpPw_posthog=%7B%22distinct_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24device_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24user_state%22%3A%22anonymous%22%2C%22%24referrer%22%3A%22http%3A%2F%2Flocalhost%3A5000%2F%22%2C%22%24referring_domain%22%3A%22localhost%3A5000%22%2C%22%24sesid%22%3A%5B1699546348222%2C%2218bb4d0a7a8312-03b7b50ca08009-26031051-144000-18bb4d0a7a933a%22%2C1699545655208%5D%2C%22%24session_recording_enabled_server_side%22%3Afalse%2C%22%24active_feature_flags%22%3A%5B%5D%2C%22%24enabled_feature_flags%22%3A%7B%7D%2C%22%24feature_flag_payloads%22%3A%7B%7D%7D'\n  },\n  [Symbol(kHeadersCount)]: 40,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0,\n  [Symbol(RequestTimeout)]: undefined\n}\" (type IncomingMessage) at path \"email\" for model \"Users\"","timestamp":"2023-11-09T16:12:28.363Z"}
{"level":"info","message":"[CreateUser] => Signup process started","timestamp":"2023-11-09T16:33:35.368Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-09T16:42:12.802Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-09T17:03:18.723Z"}
{"level":"info","message":"[CreateUser] => Signup process started","timestamp":"2023-11-09T17:03:58.490Z"}
{"level":"info","message":"[CreateUser] => User with email johnade@gmail.com created successfully","timestamp":"2023-11-09T17:03:58.640Z"}
{"level":"error","message":"Cast to string failed for value \"<ref *2> IncomingMessage {\n  _readableState: ReadableState {\n    objectMode: false,\n    highWaterMark: 16384,\n    buffer: BufferList { head: null, tail: null, length: 0 },\n    length: 0,\n    pipes: [],\n    flowing: true,\n    ended: true,\n    endEmitted: true,\n    reading: false,\n    constructed: true,\n    sync: false,\n    needReadable: false,\n    emittedReadable: false,\n    readableListening: false,\n    resumeScheduled: false,\n    errorEmitted: false,\n    emitClose: true,\n    autoDestroy: true,\n    destroyed: true,\n    errored: null,\n    closed: true,\n    closeEmitted: true,\n    defaultEncoding: 'utf8',\n    awaitDrainWriters: null,\n    multiAwaitDrain: false,\n    readingMore: false,\n    dataEmitted: true,\n    decoder: null,\n    encoding: null,\n    [Symbol(kPaused)]: false\n  },\n  _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },\n  _eventsCount: 1,\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: [],\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      constructed: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      destroyed: false,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      dataEmitted: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    _events: [Object: null prototype] {\n      end: [Array],\n      timeout: [Function: socketOnTimeout],\n      data: [Function: bound socketOnData],\n      error: [Function: socketOnError],\n      close: [Array],\n      drain: [Function: bound socketOnDrain],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      buffered: [],\n      bufferedIndex: 0,\n      allBuffers: true,\n      allNoop: true,\n      pendingcb: 0,\n      constructed: true,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      [Symbol(kOnFinished)]: []\n    },\n    allowHalfOpen: true,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    parser: HTTPParser {\n      '0': [Function: bound setRequestTimeout],\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *1],\n      incoming: [Circular *2],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      _closed: false,\n      socket: [Circular *1],\n      _header: null,\n      _keepAliveTimeout: 5000,\n      _onPendingData: [Function: bound updateOutgoingData],\n      req: [Circular *2],\n      _sent100: false,\n      _expect_continue: false,\n      locals: [Object: null prototype] {},\n      writeHead: [Function: writeHead],\n      end: [Function: end],\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype],\n      [Symbol(kUniqueHeaders)]: null\n    },\n    [Symbol(async_id_symbol)]: 303,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      [Symbol(owner_symbol)]: [Circular *1]\n    },\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: null,\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(kSetKeepAlive)]: false,\n    [Symbol(kSetKeepAliveInitialDelay)]: 0,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0,\n    [Symbol(RequestTimeout)]: undefined\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [\n    'Host',\n    'localhost:5000',\n    'Connection',\n    'keep-alive',\n    'Content-Length',\n    '41',\n    'Cache-Control',\n    'max-age=0',\n    'sec-ch-ua',\n    '\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"',\n    'sec-ch-ua-mobile',\n    '?0',\n    'sec-ch-ua-platform',\n    '\"Windows\"',\n    'Upgrade-Insecure-Requests',\n    '1',\n    'Origin',\n    'http://localhost:5000',\n    'Content-Type',\n    'application/x-www-form-urlencoded',\n    'User-Agent',\n    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36',\n    'Accept',\n    'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',\n    'Sec-Fetch-Site',\n    'same-origin',\n    'Sec-Fetch-Mode',\n    'navigate',\n    'Sec-Fetch-User',\n    '?1',\n    'Sec-Fetch-Dest',\n    'document',\n    'Referer',\n    'http://localhost:5000/',\n    'Accept-Encoding',\n    'gzip, deflate, br',\n    'Accept-Language',\n    'en-GB,en-US;q=0.9,en;q=0.8',\n    'Cookie',\n    'connect.sid=s%3AOcAfptj7dpxSkbjFXykCplLJeTW5haLf.iULoWj0gU4BkkLiqXt6YbJ6fYA4AAdC0pSiNG9sv0ZU; ph_phc_cjuWI21zkiw3B30S2vdrLd2HtfmqRWuzZMldJrXEpPw_posthog=%7B%22distinct_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24device_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24user_state%22%3A%22anonymous%22%2C%22%24referrer%22%3A%22http%3A%2F%2Flocalhost%3A5000%2Fsignup%22%2C%22%24referring_domain%22%3A%22localhost%3A5000%22%2C%22%24sesid%22%3A%5B1699549450464%2C%2218bb4d0a7a8312-03b7b50ca08009-26031051-144000-18bb4d0a7a933a%22%2C1699545655208%5D%2C%22%24session_recording_enabled_server_side%22%3Afalse%2C%22%24active_feature_flags%22%3A%5B%5D%2C%22%24enabled_feature_flags%22%3A%7B%7D%2C%22%24feature_flag_payloads%22%3A%7B%7D%7D'\n  ],\n  rawTrailers: [],\n  aborted: false,\n  upgrade: false,\n  url: '/login',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: [],\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      constructed: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      destroyed: false,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      dataEmitted: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    _events: [Object: null prototype] {\n      end: [Array],\n      timeout: [Function: socketOnTimeout],\n      data: [Function: bound socketOnData],\n      error: [Function: socketOnError],\n      close: [Array],\n      drain: [Function: bound socketOnDrain],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      buffered: [],\n      bufferedIndex: 0,\n      allBuffers: true,\n      allNoop: true,\n      pendingcb: 0,\n      constructed: true,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      [Symbol(kOnFinished)]: []\n    },\n    allowHalfOpen: true,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      _events: [Object: null prototype],\n      _eventsCount: 2,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: false,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      keepAliveTimeout: 5000,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      headersTimeout: 60000,\n      requestTimeout: 0,\n      _connectionKey: '6::::5000',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 21,\n      [Symbol(kUniqueHeaders)]: null\n    },\n    parser: HTTPParser {\n      '0': [Function: bound setRequestTimeout],\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *1],\n      incoming: [Circular *2],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      _closed: false,\n      socket: [Circular *1],\n      _header: null,\n      _keepAliveTimeout: 5000,\n      _onPendingData: [Function: bound updateOutgoingData],\n      req: [Circular *2],\n      _sent100: false,\n      _expect_continue: false,\n      locals: [Object: null prototype] {},\n      writeHead: [Function: writeHead],\n      end: [Function: end],\n      [Symbol(kCapture)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype],\n      [Symbol(kUniqueHeaders)]: null\n    },\n    [Symbol(async_id_symbol)]: 303,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      [Symbol(owner_symbol)]: [Circular *1]\n    },\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: null,\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kSetNoDelay)]: false,\n    [Symbol(kSetKeepAlive)]: false,\n    [Symbol(kSetKeepAliveInitialDelay)]: 0,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0,\n    [Symbol(RequestTimeout)]: undefined\n  },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '',\n  originalUrl: '/login',\n  _parsedUrl: Url {\n    protocol: null,\n    slashes: null,\n    auth: null,\n    host: null,\n    port: null,\n    hostname: null,\n    hash: null,\n    search: null,\n    query: null,\n    pathname: '/login',\n    path: '/login',\n    href: '/login',\n    _raw: '/login'\n  },\n  params: {},\n  query: {},\n  res: <ref *3> ServerResponse {\n    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },\n    _eventsCount: 1,\n    _maxListeners: undefined,\n    outputData: [],\n    outputSize: 0,\n    writable: true,\n    destroyed: false,\n    _last: false,\n    chunkedEncoding: false,\n    shouldKeepAlive: true,\n    maxRequestsOnConnectionReached: false,\n    _defaultKeepAlive: true,\n    useChunkedEncodingByDefault: true,\n    sendDate: true,\n    _removedConnection: false,\n    _removedContLen: false,\n    _removedTE: false,\n    _contentLength: null,\n    _hasBody: true,\n    _trailer: '',\n    finished: false,\n    _headerSent: false,\n    _closed: false,\n    socket: <ref *1> Socket {\n      connecting: false,\n      _hadError: false,\n      _parent: null,\n      _host: null,\n      _readableState: [ReadableState],\n      _events: [Object: null prototype],\n      _eventsCount: 8,\n      _maxListeners: undefined,\n      _writableState: [WritableState],\n      allowHalfOpen: true,\n      _sockname: null,\n      _pendingData: null,\n      _pendingEncoding: '',\n      server: [Server],\n      _server: [Server],\n      parser: [HTTPParser],\n      on: [Function: socketListenerWrap],\n      addListener: [Function: socketListenerWrap],\n      prependListener: [Function: socketListenerWrap],\n      setEncoding: [Function: socketSetEncoding],\n      _paused: false,\n      _httpMessage: [Circular *3],\n      [Symbol(async_id_symbol)]: 303,\n      [Symbol(kHandle)]: [TCP],\n      [Symbol(lastWriteQueueSize)]: 0,\n      [Symbol(timeout)]: null,\n      [Symbol(kBuffer)]: null,\n      [Symbol(kBufferCb)]: null,\n      [Symbol(kBufferGen)]: null,\n      [Symbol(kCapture)]: false,\n      [Symbol(kSetNoDelay)]: false,\n      [Symbol(kSetKeepAlive)]: false,\n      [Symbol(kSetKeepAliveInitialDelay)]: 0,\n      [Symbol(kBytesRead)]: 0,\n      [Symbol(kBytesWritten)]: 0,\n      [Symbol(RequestTimeout)]: undefined\n    },\n    _header: null,\n    _keepAliveTimeout: 5000,\n    _onPendingData: [Function: bound updateOutgoingData],\n    req: [Circular *2],\n    _sent100: false,\n    _expect_continue: false,\n    locals: [Object: null prototype] {},\n    writeHead: [Function: writeHead],\n    end: [Function: end],\n    [Symbol(kCapture)]: false,\n    [Symbol(kNeedDrain)]: false,\n    [Symbol(corked)]: 0,\n    [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] },\n    [Symbol(kUniqueHeaders)]: null\n  },\n  body: { email: 'johnade@gmail.com', password: 'Joshua' },\n  _body: true,\n  length: undefined,\n  _parsedOriginalUrl: Url {\n    protocol: null,\n    slashes: null,\n    auth: null,\n    host: null,\n    port: null,\n    hostname: null,\n    hash: null,\n    search: null,\n    query: null,\n    pathname: '/login',\n    path: '/login',\n    href: '/login',\n    _raw: '/login'\n  },\n  sessionStore: MemoryStore {\n    _events: [Object: null prototype] {\n      disconnect: [Function: ondisconnect],\n      connect: [Function: onconnect]\n    },\n    _eventsCount: 2,\n    _maxListeners: undefined,\n    sessions: [Object: null prototype] {\n      OcAfptj7dpxSkbjFXykCplLJeTW5haLf: '{\"cookie\":{\"originalMaxAge\":null,\"expires\":null,\"httpOnly\":true,\"path\":\"/\"}}'\n    },\n    generate: [Function (anonymous)],\n    [Symbol(kCapture)]: false\n  },\n  sessionID: 'OcAfptj7dpxSkbjFXykCplLJeTW5haLf',\n  session: Session {\n    cookie: { path: '/', _expires: null, originalMaxAge: null, httpOnly: true }\n  },\n  route: Route { path: '/login', stack: [ [Layer] ], methods: { post: true } },\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: {\n    host: 'localhost:5000',\n    connection: 'keep-alive',\n    'content-length': '41',\n    'cache-control': 'max-age=0',\n    'sec-ch-ua': '\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"',\n    'sec-ch-ua-mobile': '?0',\n    'sec-ch-ua-platform': '\"Windows\"',\n    'upgrade-insecure-requests': '1',\n    origin: 'http://localhost:5000',\n    'content-type': 'application/x-www-form-urlencoded',\n    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36',\n    accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',\n    'sec-fetch-site': 'same-origin',\n    'sec-fetch-mode': 'navigate',\n    'sec-fetch-user': '?1',\n    'sec-fetch-dest': 'document',\n    referer: 'http://localhost:5000/',\n    'accept-encoding': 'gzip, deflate, br',\n    'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8',\n    cookie: 'connect.sid=s%3AOcAfptj7dpxSkbjFXykCplLJeTW5haLf.iULoWj0gU4BkkLiqXt6YbJ6fYA4AAdC0pSiNG9sv0ZU; ph_phc_cjuWI21zkiw3B30S2vdrLd2HtfmqRWuzZMldJrXEpPw_posthog=%7B%22distinct_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24device_id%22%3A%2218b3e72d252498-0d36fd7139f95f-26031151-144000-18b3e72d253733%22%2C%22%24user_state%22%3A%22anonymous%22%2C%22%24referrer%22%3A%22http%3A%2F%2Flocalhost%3A5000%2Fsignup%22%2C%22%24referring_domain%22%3A%22localhost%3A5000%22%2C%22%24sesid%22%3A%5B1699549450464%2C%2218bb4d0a7a8312-03b7b50ca08009-26031051-144000-18bb4d0a7a933a%22%2C1699545655208%5D%2C%22%24session_recording_enabled_server_side%22%3Afalse%2C%22%24active_feature_flags%22%3A%5B%5D%2C%22%24enabled_feature_flags%22%3A%7B%7D%2C%22%24feature_flag_payloads%22%3A%7B%7D%7D'\n  },\n  [Symbol(kHeadersCount)]: 40,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0,\n  [Symbol(RequestTimeout)]: undefined\n}\" (type IncomingMessage) at path \"email\" for model \"Users\"","timestamp":"2023-11-09T17:04:10.571Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-09T17:05:21.041Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-09T17:52:11.425Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-09T17:52:19.974Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-09T17:53:52.991Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-09T17:54:13.597Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-09T18:05:25.004Z"}
{"level":"info","message":"[Authenticate user] => login process started","timestamp":"2023-11-09T18:05:48.478Z"}
{"level":"info","message":"[Give user access] => login process successful","timestamp":"2023-11-09T18:05:48.606Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-09T18:10:39.834Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-09T18:11:17.819Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-09T18:11:29.534Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-09T18:11:54.641Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-09T18:12:08.264Z"}
{"level":"info","message":"[Authenticate user] => login process started","timestamp":"2023-11-09T18:12:09.524Z"}
{"level":"info","message":"[Give user access] => login process successful","timestamp":"2023-11-09T18:12:09.639Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-09T18:31:07.279Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-09T18:31:26.128Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-09T18:35:27.836Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-09T18:35:48.786Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-09T18:39:04.557Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-09T18:40:20.495Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-09T19:21:13.405Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-09T20:33:12.414Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-09T20:33:29.387Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-09T20:33:39.487Z"}
{"level":"info","message":"Server is listening on port 5000","timestamp":"2023-11-09T20:33:54.367Z"}
